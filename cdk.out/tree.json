{
  "version": "tree-0.1",
  "tree": {
    "id": "App",
    "path": "",
    "children": {
      "Tree": {
        "id": "Tree",
        "path": "Tree",
        "constructInfo": {
          "fqn": "monocdk.Construct",
          "version": "1.102.0"
        }
      },
      "keuk": {
        "id": "keuk",
        "path": "keuk",
        "children": {
          "pipeline": {
            "id": "pipeline",
            "path": "keuk/pipeline",
            "children": {
              "Pipeline": {
                "id": "Pipeline",
                "path": "keuk/pipeline/Pipeline",
                "children": {
                  "ArtifactsBucketEncryptionKey": {
                    "id": "ArtifactsBucketEncryptionKey",
                    "path": "keuk/pipeline/Pipeline/ArtifactsBucketEncryptionKey",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "keuk/pipeline/Pipeline/ArtifactsBucketEncryptionKey/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::KMS::Key",
                          "aws:cdk:cloudformation:props": {
                            "keyPolicy": {
                              "Statement": [
                                {
                                  "Action": [
                                    "kms:Create*",
                                    "kms:Describe*",
                                    "kms:Enable*",
                                    "kms:List*",
                                    "kms:Put*",
                                    "kms:Update*",
                                    "kms:Revoke*",
                                    "kms:Disable*",
                                    "kms:Get*",
                                    "kms:Delete*",
                                    "kms:ScheduleKeyDeletion",
                                    "kms:CancelKeyDeletion",
                                    "kms:GenerateDataKey",
                                    "kms:TagResource",
                                    "kms:UntagResource"
                                  ],
                                  "Effect": "Allow",
                                  "Principal": {
                                    "AWS": {
                                      "Fn::Join": [
                                        "",
                                        [
                                          "arn:",
                                          {
                                            "Ref": "AWS::Partition"
                                          },
                                          ":iam::",
                                          {
                                            "Ref": "AWS::AccountId"
                                          },
                                          ":root"
                                        ]
                                      ]
                                    }
                                  },
                                  "Resource": "*"
                                },
                                {
                                  "Action": [
                                    "kms:Decrypt",
                                    "kms:DescribeKey",
                                    "kms:Encrypt",
                                    "kms:ReEncrypt*",
                                    "kms:GenerateDataKey*"
                                  ],
                                  "Effect": "Allow",
                                  "Principal": {
                                    "AWS": {
                                      "Fn::GetAtt": [
                                        "pipelinePipelineRole7016E5DF",
                                        "Arn"
                                      ]
                                    }
                                  },
                                  "Resource": "*"
                                },
                                {
                                  "Action": [
                                    "kms:Decrypt",
                                    "kms:DescribeKey",
                                    "kms:Encrypt",
                                    "kms:ReEncrypt*",
                                    "kms:GenerateDataKey*"
                                  ],
                                  "Effect": "Allow",
                                  "Principal": {
                                    "AWS": {
                                      "Fn::GetAtt": [
                                        "pipelinePipelineBuildSynthCdkBuildProjectRole0C39D18F",
                                        "Arn"
                                      ]
                                    }
                                  },
                                  "Resource": "*"
                                },
                                {
                                  "Action": [
                                    "kms:Decrypt",
                                    "kms:Encrypt",
                                    "kms:ReEncrypt*",
                                    "kms:GenerateDataKey*"
                                  ],
                                  "Effect": "Allow",
                                  "Principal": {
                                    "AWS": {
                                      "Fn::GetAtt": [
                                        "pipelinePipelineBuildSynthCdkBuildProjectRole0C39D18F",
                                        "Arn"
                                      ]
                                    }
                                  },
                                  "Resource": "*"
                                },
                                {
                                  "Action": [
                                    "kms:Decrypt",
                                    "kms:DescribeKey"
                                  ],
                                  "Effect": "Allow",
                                  "Principal": {
                                    "AWS": {
                                      "Fn::GetAtt": [
                                        "pipelineUpdatePipelineSelfMutationRole91820177",
                                        "Arn"
                                      ]
                                    }
                                  },
                                  "Resource": "*"
                                },
                                {
                                  "Action": [
                                    "kms:Decrypt",
                                    "kms:Encrypt",
                                    "kms:ReEncrypt*",
                                    "kms:GenerateDataKey*"
                                  ],
                                  "Effect": "Allow",
                                  "Principal": {
                                    "AWS": {
                                      "Fn::GetAtt": [
                                        "pipelineUpdatePipelineSelfMutationRole91820177",
                                        "Arn"
                                      ]
                                    }
                                  },
                                  "Resource": "*"
                                },
                                {
                                  "Action": [
                                    "kms:Decrypt",
                                    "kms:DescribeKey"
                                  ],
                                  "Effect": "Allow",
                                  "Principal": {
                                    "AWS": {
                                      "Fn::Join": [
                                        "",
                                        [
                                          "arn:",
                                          {
                                            "Ref": "AWS::Partition"
                                          },
                                          ":iam::",
                                          {
                                            "Ref": "AWS::AccountId"
                                          },
                                          ":role/cdk-hnb659fds-deploy-role-",
                                          {
                                            "Ref": "AWS::AccountId"
                                          },
                                          "-",
                                          {
                                            "Ref": "AWS::Region"
                                          }
                                        ]
                                      ]
                                    }
                                  },
                                  "Resource": "*"
                                }
                              ],
                              "Version": "2012-10-17"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "monocdk.aws_kms.CfnKey",
                          "version": "1.102.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "monocdk.aws_kms.Key",
                      "version": "1.102.0"
                    }
                  },
                  "ArtifactsBucketEncryptionKeyAlias": {
                    "id": "ArtifactsBucketEncryptionKeyAlias",
                    "path": "keuk/pipeline/Pipeline/ArtifactsBucketEncryptionKeyAlias",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "keuk/pipeline/Pipeline/ArtifactsBucketEncryptionKeyAlias/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::KMS::Alias",
                          "aws:cdk:cloudformation:props": {
                            "aliasName": "alias/codepipeline-keukpipelinepipeline2976a7cc",
                            "targetKeyId": {
                              "Fn::GetAtt": [
                                "pipelinePipelineArtifactsBucketEncryptionKey56EE9D50",
                                "Arn"
                              ]
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "monocdk.aws_kms.CfnAlias",
                          "version": "1.102.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "monocdk.aws_kms.Alias",
                      "version": "1.102.0"
                    }
                  },
                  "ArtifactsBucket": {
                    "id": "ArtifactsBucket",
                    "path": "keuk/pipeline/Pipeline/ArtifactsBucket",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "keuk/pipeline/Pipeline/ArtifactsBucket/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::S3::Bucket",
                          "aws:cdk:cloudformation:props": {
                            "bucketEncryption": {
                              "serverSideEncryptionConfiguration": [
                                {
                                  "serverSideEncryptionByDefault": {
                                    "sseAlgorithm": "aws:kms",
                                    "kmsMasterKeyId": {
                                      "Fn::GetAtt": [
                                        "pipelinePipelineArtifactsBucketEncryptionKey56EE9D50",
                                        "Arn"
                                      ]
                                    }
                                  }
                                }
                              ]
                            },
                            "publicAccessBlockConfiguration": {
                              "blockPublicAcls": true,
                              "blockPublicPolicy": true,
                              "ignorePublicAcls": true,
                              "restrictPublicBuckets": true
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "monocdk.aws_s3.CfnBucket",
                          "version": "1.102.0"
                        }
                      },
                      "Notifications": {
                        "id": "Notifications",
                        "path": "keuk/pipeline/Pipeline/ArtifactsBucket/Notifications",
                        "constructInfo": {
                          "fqn": "monocdk.Construct",
                          "version": "1.102.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "monocdk.aws_s3.Bucket",
                      "version": "1.102.0"
                    }
                  },
                  "Role": {
                    "id": "Role",
                    "path": "keuk/pipeline/Pipeline/Role",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "keuk/pipeline/Pipeline/Role/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                          "aws:cdk:cloudformation:props": {
                            "assumeRolePolicyDocument": {
                              "Statement": [
                                {
                                  "Action": "sts:AssumeRole",
                                  "Effect": "Allow",
                                  "Principal": {
                                    "Service": "codepipeline.amazonaws.com"
                                  }
                                }
                              ],
                              "Version": "2012-10-17"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "monocdk.aws_iam.CfnRole",
                          "version": "1.102.0"
                        }
                      },
                      "DefaultPolicy": {
                        "id": "DefaultPolicy",
                        "path": "keuk/pipeline/Pipeline/Role/DefaultPolicy",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "keuk/pipeline/Pipeline/Role/DefaultPolicy/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                              "aws:cdk:cloudformation:props": {
                                "policyDocument": {
                                  "Statement": [
                                    {
                                      "Action": [
                                        "s3:GetObject*",
                                        "s3:GetBucket*",
                                        "s3:List*",
                                        "s3:DeleteObject*",
                                        "s3:PutObject*",
                                        "s3:Abort*"
                                      ],
                                      "Effect": "Allow",
                                      "Resource": [
                                        {
                                          "Fn::GetAtt": [
                                            "pipelinePipelineArtifactsBucketC2CD5B5E",
                                            "Arn"
                                          ]
                                        },
                                        {
                                          "Fn::Join": [
                                            "",
                                            [
                                              {
                                                "Fn::GetAtt": [
                                                  "pipelinePipelineArtifactsBucketC2CD5B5E",
                                                  "Arn"
                                                ]
                                              },
                                              "/*"
                                            ]
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "Action": [
                                        "kms:Decrypt",
                                        "kms:DescribeKey",
                                        "kms:Encrypt",
                                        "kms:ReEncrypt*",
                                        "kms:GenerateDataKey*"
                                      ],
                                      "Effect": "Allow",
                                      "Resource": {
                                        "Fn::GetAtt": [
                                          "pipelinePipelineArtifactsBucketEncryptionKey56EE9D50",
                                          "Arn"
                                        ]
                                      }
                                    },
                                    {
                                      "Action": "sts:AssumeRole",
                                      "Effect": "Allow",
                                      "Resource": {
                                        "Fn::GetAtt": [
                                          "pipelinePipelineBuildSynthCodePipelineActionRoleD2261161",
                                          "Arn"
                                        ]
                                      }
                                    },
                                    {
                                      "Action": "sts:AssumeRole",
                                      "Effect": "Allow",
                                      "Resource": {
                                        "Fn::GetAtt": [
                                          "pipelinePipelineUpdatePipelineSelfMutateCodePipelineActionRole616B0B5B",
                                          "Arn"
                                        ]
                                      }
                                    },
                                    {
                                      "Action": "sts:AssumeRole",
                                      "Effect": "Allow",
                                      "Resource": {
                                        "Fn::Join": [
                                          "",
                                          [
                                            "arn:",
                                            {
                                              "Ref": "AWS::Partition"
                                            },
                                            ":iam::",
                                            {
                                              "Ref": "AWS::AccountId"
                                            },
                                            ":role/cdk-hnb659fds-deploy-role-",
                                            {
                                              "Ref": "AWS::AccountId"
                                            },
                                            "-",
                                            {
                                              "Ref": "AWS::Region"
                                            }
                                          ]
                                        ]
                                      }
                                    }
                                  ],
                                  "Version": "2012-10-17"
                                },
                                "policyName": "pipelinePipelineRoleDefaultPolicy16010F3E",
                                "roles": [
                                  {
                                    "Ref": "pipelinePipelineRole7016E5DF"
                                  }
                                ]
                              }
                            },
                            "constructInfo": {
                              "fqn": "monocdk.aws_iam.CfnPolicy",
                              "version": "1.102.0"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "monocdk.aws_iam.Policy",
                          "version": "1.102.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "monocdk.aws_iam.Role",
                      "version": "1.102.0"
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "keuk/pipeline/Pipeline/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::CodePipeline::Pipeline",
                      "aws:cdk:cloudformation:props": {
                        "roleArn": {
                          "Fn::GetAtt": [
                            "pipelinePipelineRole7016E5DF",
                            "Arn"
                          ]
                        },
                        "stages": [
                          {
                            "name": "Source",
                            "actions": [
                              {
                                "name": "starbound-source",
                                "outputArtifacts": [
                                  {
                                    "name": "StarboundSource"
                                  }
                                ],
                                "actionTypeId": {
                                  "category": "Source",
                                  "version": "1",
                                  "owner": "ThirdParty",
                                  "provider": "GitHub"
                                },
                                "configuration": {
                                  "Owner": "fxaa",
                                  "Repo": "keukbound",
                                  "Branch": "main",
                                  "OAuthToken": "{{resolve:secretsmanager:github/token:SecretString:::}}",
                                  "PollForSourceChanges": false
                                },
                                "runOrder": 1
                              }
                            ]
                          },
                          {
                            "name": "Build",
                            "actions": [
                              {
                                "name": "Synth",
                                "inputArtifacts": [
                                  {
                                    "name": "StarboundSource"
                                  }
                                ],
                                "outputArtifacts": [
                                  {
                                    "name": "CloudAssembly"
                                  }
                                ],
                                "actionTypeId": {
                                  "category": "Build",
                                  "version": "1",
                                  "owner": "AWS",
                                  "provider": "CodeBuild"
                                },
                                "configuration": {
                                  "ProjectName": {
                                    "Ref": "pipelinePipelineBuildSynthCdkBuildProject4237770A"
                                  },
                                  "EnvironmentVariables": "[{\"name\":\"_PROJECT_CONFIG_HASH\",\"type\":\"PLAINTEXT\",\"value\":\"84fd1b2a234b7532183cdb29c3cbd9d8da55babd3576af5d81a89ee4ac55d765\"}]"
                                },
                                "runOrder": 1,
                                "roleArn": {
                                  "Fn::GetAtt": [
                                    "pipelinePipelineBuildSynthCodePipelineActionRoleD2261161",
                                    "Arn"
                                  ]
                                }
                              }
                            ]
                          },
                          {
                            "name": "UpdatePipeline",
                            "actions": [
                              {
                                "name": "SelfMutate",
                                "inputArtifacts": [
                                  {
                                    "name": "CloudAssembly"
                                  }
                                ],
                                "actionTypeId": {
                                  "category": "Build",
                                  "version": "1",
                                  "owner": "AWS",
                                  "provider": "CodeBuild"
                                },
                                "configuration": {
                                  "ProjectName": {
                                    "Ref": "pipelineUpdatePipelineSelfMutation14A96D2F"
                                  }
                                },
                                "runOrder": 1,
                                "roleArn": {
                                  "Fn::GetAtt": [
                                    "pipelinePipelineUpdatePipelineSelfMutateCodePipelineActionRole616B0B5B",
                                    "Arn"
                                  ]
                                }
                              }
                            ]
                          },
                          {
                            "name": "starbound-stage",
                            "actions": [
                              {
                                "name": "server-stack.Prepare",
                                "inputArtifacts": [
                                  {
                                    "name": "CloudAssembly"
                                  }
                                ],
                                "actionTypeId": {
                                  "category": "Deploy",
                                  "version": "1",
                                  "owner": "AWS",
                                  "provider": "CloudFormation"
                                },
                                "configuration": {
                                  "StackName": "starbound-stage-server-stack",
                                  "Capabilities": "CAPABILITY_NAMED_IAM,CAPABILITY_AUTO_EXPAND",
                                  "RoleArn": {
                                    "Fn::Join": [
                                      "",
                                      [
                                        "arn:",
                                        {
                                          "Ref": "AWS::Partition"
                                        },
                                        ":iam::",
                                        {
                                          "Ref": "AWS::AccountId"
                                        },
                                        ":role/cdk-hnb659fds-cfn-exec-role-",
                                        {
                                          "Ref": "AWS::AccountId"
                                        },
                                        "-",
                                        {
                                          "Ref": "AWS::Region"
                                        }
                                      ]
                                    ]
                                  },
                                  "ActionMode": "CHANGE_SET_REPLACE",
                                  "ChangeSetName": "PipelineChange",
                                  "TemplatePath": "CloudAssembly::assembly-keuk-starbound-stage/keukstarboundstageserverstack5A818970.template.json"
                                },
                                "runOrder": 1,
                                "roleArn": {
                                  "Fn::Join": [
                                    "",
                                    [
                                      "arn:",
                                      {
                                        "Ref": "AWS::Partition"
                                      },
                                      ":iam::",
                                      {
                                        "Ref": "AWS::AccountId"
                                      },
                                      ":role/cdk-hnb659fds-deploy-role-",
                                      {
                                        "Ref": "AWS::AccountId"
                                      },
                                      "-",
                                      {
                                        "Ref": "AWS::Region"
                                      }
                                    ]
                                  ]
                                }
                              },
                              {
                                "name": "server-stack.Deploy",
                                "actionTypeId": {
                                  "category": "Deploy",
                                  "version": "1",
                                  "owner": "AWS",
                                  "provider": "CloudFormation"
                                },
                                "configuration": {
                                  "StackName": "starbound-stage-server-stack",
                                  "ActionMode": "CHANGE_SET_EXECUTE",
                                  "ChangeSetName": "PipelineChange"
                                },
                                "runOrder": 2,
                                "roleArn": {
                                  "Fn::Join": [
                                    "",
                                    [
                                      "arn:",
                                      {
                                        "Ref": "AWS::Partition"
                                      },
                                      ":iam::",
                                      {
                                        "Ref": "AWS::AccountId"
                                      },
                                      ":role/cdk-hnb659fds-deploy-role-",
                                      {
                                        "Ref": "AWS::AccountId"
                                      },
                                      "-",
                                      {
                                        "Ref": "AWS::Region"
                                      }
                                    ]
                                  ]
                                }
                              }
                            ]
                          }
                        ],
                        "artifactStore": {
                          "type": "S3",
                          "location": {
                            "Ref": "pipelinePipelineArtifactsBucketC2CD5B5E"
                          },
                          "encryptionKey": {
                            "type": "KMS",
                            "id": {
                              "Fn::GetAtt": [
                                "pipelinePipelineArtifactsBucketEncryptionKey56EE9D50",
                                "Arn"
                              ]
                            }
                          }
                        },
                        "name": "KeukboundDeployment",
                        "restartExecutionOnUpdate": true
                      }
                    },
                    "constructInfo": {
                      "fqn": "monocdk.aws_codepipeline.CfnPipeline",
                      "version": "1.102.0"
                    }
                  },
                  "Source": {
                    "id": "Source",
                    "path": "keuk/pipeline/Pipeline/Source",
                    "children": {
                      "starbound-source": {
                        "id": "starbound-source",
                        "path": "keuk/pipeline/Pipeline/Source/starbound-source",
                        "children": {
                          "WebhookResource": {
                            "id": "WebhookResource",
                            "path": "keuk/pipeline/Pipeline/Source/starbound-source/WebhookResource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::CodePipeline::Webhook",
                              "aws:cdk:cloudformation:props": {
                                "authentication": "GITHUB_HMAC",
                                "authenticationConfiguration": {
                                  "secretToken": "{{resolve:secretsmanager:github/token:SecretString:::}}"
                                },
                                "filters": [
                                  {
                                    "jsonPath": "$.ref",
                                    "matchEquals": "refs/heads/{Branch}"
                                  }
                                ],
                                "targetAction": "starbound-source",
                                "targetPipeline": {
                                  "Ref": "pipelinePipeline4163A4B1"
                                },
                                "targetPipelineVersion": 1,
                                "registerWithThirdParty": true
                              }
                            },
                            "constructInfo": {
                              "fqn": "monocdk.aws_codepipeline.CfnWebhook",
                              "version": "1.102.0"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "monocdk.Construct",
                          "version": "1.102.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "monocdk.Construct",
                      "version": "1.102.0"
                    }
                  },
                  "Build": {
                    "id": "Build",
                    "path": "keuk/pipeline/Pipeline/Build",
                    "children": {
                      "Synth": {
                        "id": "Synth",
                        "path": "keuk/pipeline/Pipeline/Build/Synth",
                        "children": {
                          "CodePipelineActionRole": {
                            "id": "CodePipelineActionRole",
                            "path": "keuk/pipeline/Pipeline/Build/Synth/CodePipelineActionRole",
                            "children": {
                              "Resource": {
                                "id": "Resource",
                                "path": "keuk/pipeline/Pipeline/Build/Synth/CodePipelineActionRole/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                                  "aws:cdk:cloudformation:props": {
                                    "assumeRolePolicyDocument": {
                                      "Statement": [
                                        {
                                          "Action": "sts:AssumeRole",
                                          "Effect": "Allow",
                                          "Principal": {
                                            "AWS": {
                                              "Fn::Join": [
                                                "",
                                                [
                                                  "arn:",
                                                  {
                                                    "Ref": "AWS::Partition"
                                                  },
                                                  ":iam::",
                                                  {
                                                    "Ref": "AWS::AccountId"
                                                  },
                                                  ":root"
                                                ]
                                              ]
                                            }
                                          }
                                        }
                                      ],
                                      "Version": "2012-10-17"
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "monocdk.aws_iam.CfnRole",
                                  "version": "1.102.0"
                                }
                              },
                              "DefaultPolicy": {
                                "id": "DefaultPolicy",
                                "path": "keuk/pipeline/Pipeline/Build/Synth/CodePipelineActionRole/DefaultPolicy",
                                "children": {
                                  "Resource": {
                                    "id": "Resource",
                                    "path": "keuk/pipeline/Pipeline/Build/Synth/CodePipelineActionRole/DefaultPolicy/Resource",
                                    "attributes": {
                                      "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                                      "aws:cdk:cloudformation:props": {
                                        "policyDocument": {
                                          "Statement": [
                                            {
                                              "Action": [
                                                "codebuild:BatchGetBuilds",
                                                "codebuild:StartBuild",
                                                "codebuild:StopBuild"
                                              ],
                                              "Effect": "Allow",
                                              "Resource": {
                                                "Fn::GetAtt": [
                                                  "pipelinePipelineBuildSynthCdkBuildProject4237770A",
                                                  "Arn"
                                                ]
                                              }
                                            }
                                          ],
                                          "Version": "2012-10-17"
                                        },
                                        "policyName": "pipelinePipelineBuildSynthCodePipelineActionRoleDefaultPolicy7B8E3FCA",
                                        "roles": [
                                          {
                                            "Ref": "pipelinePipelineBuildSynthCodePipelineActionRoleD2261161"
                                          }
                                        ]
                                      }
                                    },
                                    "constructInfo": {
                                      "fqn": "monocdk.aws_iam.CfnPolicy",
                                      "version": "1.102.0"
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "monocdk.aws_iam.Policy",
                                  "version": "1.102.0"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "monocdk.aws_iam.Role",
                              "version": "1.102.0"
                            }
                          },
                          "CdkBuildProject": {
                            "id": "CdkBuildProject",
                            "path": "keuk/pipeline/Pipeline/Build/Synth/CdkBuildProject",
                            "children": {
                              "Role": {
                                "id": "Role",
                                "path": "keuk/pipeline/Pipeline/Build/Synth/CdkBuildProject/Role",
                                "children": {
                                  "Resource": {
                                    "id": "Resource",
                                    "path": "keuk/pipeline/Pipeline/Build/Synth/CdkBuildProject/Role/Resource",
                                    "attributes": {
                                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                                      "aws:cdk:cloudformation:props": {
                                        "assumeRolePolicyDocument": {
                                          "Statement": [
                                            {
                                              "Action": "sts:AssumeRole",
                                              "Effect": "Allow",
                                              "Principal": {
                                                "Service": "codebuild.amazonaws.com"
                                              }
                                            }
                                          ],
                                          "Version": "2012-10-17"
                                        }
                                      }
                                    },
                                    "constructInfo": {
                                      "fqn": "monocdk.aws_iam.CfnRole",
                                      "version": "1.102.0"
                                    }
                                  },
                                  "DefaultPolicy": {
                                    "id": "DefaultPolicy",
                                    "path": "keuk/pipeline/Pipeline/Build/Synth/CdkBuildProject/Role/DefaultPolicy",
                                    "children": {
                                      "Resource": {
                                        "id": "Resource",
                                        "path": "keuk/pipeline/Pipeline/Build/Synth/CdkBuildProject/Role/DefaultPolicy/Resource",
                                        "attributes": {
                                          "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                                          "aws:cdk:cloudformation:props": {
                                            "policyDocument": {
                                              "Statement": [
                                                {
                                                  "Action": [
                                                    "logs:CreateLogGroup",
                                                    "logs:CreateLogStream",
                                                    "logs:PutLogEvents"
                                                  ],
                                                  "Effect": "Allow",
                                                  "Resource": [
                                                    {
                                                      "Fn::Join": [
                                                        "",
                                                        [
                                                          "arn:",
                                                          {
                                                            "Ref": "AWS::Partition"
                                                          },
                                                          ":logs:",
                                                          {
                                                            "Ref": "AWS::Region"
                                                          },
                                                          ":",
                                                          {
                                                            "Ref": "AWS::AccountId"
                                                          },
                                                          ":log-group:/aws/codebuild/",
                                                          {
                                                            "Ref": "pipelinePipelineBuildSynthCdkBuildProject4237770A"
                                                          }
                                                        ]
                                                      ]
                                                    },
                                                    {
                                                      "Fn::Join": [
                                                        "",
                                                        [
                                                          "arn:",
                                                          {
                                                            "Ref": "AWS::Partition"
                                                          },
                                                          ":logs:",
                                                          {
                                                            "Ref": "AWS::Region"
                                                          },
                                                          ":",
                                                          {
                                                            "Ref": "AWS::AccountId"
                                                          },
                                                          ":log-group:/aws/codebuild/",
                                                          {
                                                            "Ref": "pipelinePipelineBuildSynthCdkBuildProject4237770A"
                                                          },
                                                          ":*"
                                                        ]
                                                      ]
                                                    }
                                                  ]
                                                },
                                                {
                                                  "Action": [
                                                    "codebuild:CreateReportGroup",
                                                    "codebuild:CreateReport",
                                                    "codebuild:UpdateReport",
                                                    "codebuild:BatchPutTestCases",
                                                    "codebuild:BatchPutCodeCoverages"
                                                  ],
                                                  "Effect": "Allow",
                                                  "Resource": {
                                                    "Fn::Join": [
                                                      "",
                                                      [
                                                        "arn:",
                                                        {
                                                          "Ref": "AWS::Partition"
                                                        },
                                                        ":codebuild:",
                                                        {
                                                          "Ref": "AWS::Region"
                                                        },
                                                        ":",
                                                        {
                                                          "Ref": "AWS::AccountId"
                                                        },
                                                        ":report-group/",
                                                        {
                                                          "Ref": "pipelinePipelineBuildSynthCdkBuildProject4237770A"
                                                        },
                                                        "-*"
                                                      ]
                                                    ]
                                                  }
                                                },
                                                {
                                                  "Action": [
                                                    "s3:GetObject*",
                                                    "s3:GetBucket*",
                                                    "s3:List*",
                                                    "s3:DeleteObject*",
                                                    "s3:PutObject*",
                                                    "s3:Abort*"
                                                  ],
                                                  "Effect": "Allow",
                                                  "Resource": [
                                                    {
                                                      "Fn::GetAtt": [
                                                        "pipelinePipelineArtifactsBucketC2CD5B5E",
                                                        "Arn"
                                                      ]
                                                    },
                                                    {
                                                      "Fn::Join": [
                                                        "",
                                                        [
                                                          {
                                                            "Fn::GetAtt": [
                                                              "pipelinePipelineArtifactsBucketC2CD5B5E",
                                                              "Arn"
                                                            ]
                                                          },
                                                          "/*"
                                                        ]
                                                      ]
                                                    }
                                                  ]
                                                },
                                                {
                                                  "Action": [
                                                    "kms:Decrypt",
                                                    "kms:DescribeKey",
                                                    "kms:Encrypt",
                                                    "kms:ReEncrypt*",
                                                    "kms:GenerateDataKey*"
                                                  ],
                                                  "Effect": "Allow",
                                                  "Resource": {
                                                    "Fn::GetAtt": [
                                                      "pipelinePipelineArtifactsBucketEncryptionKey56EE9D50",
                                                      "Arn"
                                                    ]
                                                  }
                                                },
                                                {
                                                  "Action": [
                                                    "kms:Decrypt",
                                                    "kms:Encrypt",
                                                    "kms:ReEncrypt*",
                                                    "kms:GenerateDataKey*"
                                                  ],
                                                  "Effect": "Allow",
                                                  "Resource": {
                                                    "Fn::GetAtt": [
                                                      "pipelinePipelineArtifactsBucketEncryptionKey56EE9D50",
                                                      "Arn"
                                                    ]
                                                  }
                                                }
                                              ],
                                              "Version": "2012-10-17"
                                            },
                                            "policyName": "pipelinePipelineBuildSynthCdkBuildProjectRoleDefaultPolicyB3981181",
                                            "roles": [
                                              {
                                                "Ref": "pipelinePipelineBuildSynthCdkBuildProjectRole0C39D18F"
                                              }
                                            ]
                                          }
                                        },
                                        "constructInfo": {
                                          "fqn": "monocdk.aws_iam.CfnPolicy",
                                          "version": "1.102.0"
                                        }
                                      }
                                    },
                                    "constructInfo": {
                                      "fqn": "monocdk.aws_iam.Policy",
                                      "version": "1.102.0"
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "monocdk.aws_iam.Role",
                                  "version": "1.102.0"
                                }
                              },
                              "Resource": {
                                "id": "Resource",
                                "path": "keuk/pipeline/Pipeline/Build/Synth/CdkBuildProject/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::CodeBuild::Project",
                                  "aws:cdk:cloudformation:props": {
                                    "artifacts": {
                                      "type": "CODEPIPELINE"
                                    },
                                    "environment": {
                                      "type": "LINUX_CONTAINER",
                                      "image": "aws/codebuild/standard:5.0",
                                      "imagePullCredentialsType": "CODEBUILD",
                                      "privilegedMode": false,
                                      "computeType": "BUILD_GENERAL1_SMALL"
                                    },
                                    "serviceRole": {
                                      "Fn::GetAtt": [
                                        "pipelinePipelineBuildSynthCdkBuildProjectRole0C39D18F",
                                        "Arn"
                                      ]
                                    },
                                    "source": {
                                      "type": "CODEPIPELINE",
                                      "buildSpec": "{\n  \"version\": \"0.2\",\n  \"phases\": {\n    \"pre_build\": {\n      \"commands\": [\n        \"npm ci\"\n      ]\n    },\n    \"build\": {\n      \"commands\": [\n        \"npx cdk synth\"\n      ]\n    }\n  },\n  \"artifacts\": {\n    \"base-directory\": \"cdk.out\",\n    \"files\": \"**/*\"\n  }\n}"
                                    },
                                    "encryptionKey": {
                                      "Fn::GetAtt": [
                                        "pipelinePipelineArtifactsBucketEncryptionKey56EE9D50",
                                        "Arn"
                                      ]
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "monocdk.aws_codebuild.CfnProject",
                                  "version": "1.102.0"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "monocdk.aws_codebuild.PipelineProject",
                              "version": "1.102.0"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "monocdk.Construct",
                          "version": "1.102.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "monocdk.Construct",
                      "version": "1.102.0"
                    }
                  },
                  "UpdatePipeline": {
                    "id": "UpdatePipeline",
                    "path": "keuk/pipeline/Pipeline/UpdatePipeline",
                    "children": {
                      "SelfMutate": {
                        "id": "SelfMutate",
                        "path": "keuk/pipeline/Pipeline/UpdatePipeline/SelfMutate",
                        "children": {
                          "CodePipelineActionRole": {
                            "id": "CodePipelineActionRole",
                            "path": "keuk/pipeline/Pipeline/UpdatePipeline/SelfMutate/CodePipelineActionRole",
                            "children": {
                              "Resource": {
                                "id": "Resource",
                                "path": "keuk/pipeline/Pipeline/UpdatePipeline/SelfMutate/CodePipelineActionRole/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                                  "aws:cdk:cloudformation:props": {
                                    "assumeRolePolicyDocument": {
                                      "Statement": [
                                        {
                                          "Action": "sts:AssumeRole",
                                          "Effect": "Allow",
                                          "Principal": {
                                            "AWS": {
                                              "Fn::Join": [
                                                "",
                                                [
                                                  "arn:",
                                                  {
                                                    "Ref": "AWS::Partition"
                                                  },
                                                  ":iam::",
                                                  {
                                                    "Ref": "AWS::AccountId"
                                                  },
                                                  ":root"
                                                ]
                                              ]
                                            }
                                          }
                                        }
                                      ],
                                      "Version": "2012-10-17"
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "monocdk.aws_iam.CfnRole",
                                  "version": "1.102.0"
                                }
                              },
                              "DefaultPolicy": {
                                "id": "DefaultPolicy",
                                "path": "keuk/pipeline/Pipeline/UpdatePipeline/SelfMutate/CodePipelineActionRole/DefaultPolicy",
                                "children": {
                                  "Resource": {
                                    "id": "Resource",
                                    "path": "keuk/pipeline/Pipeline/UpdatePipeline/SelfMutate/CodePipelineActionRole/DefaultPolicy/Resource",
                                    "attributes": {
                                      "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                                      "aws:cdk:cloudformation:props": {
                                        "policyDocument": {
                                          "Statement": [
                                            {
                                              "Action": [
                                                "codebuild:BatchGetBuilds",
                                                "codebuild:StartBuild",
                                                "codebuild:StopBuild"
                                              ],
                                              "Effect": "Allow",
                                              "Resource": {
                                                "Fn::GetAtt": [
                                                  "pipelineUpdatePipelineSelfMutation14A96D2F",
                                                  "Arn"
                                                ]
                                              }
                                            }
                                          ],
                                          "Version": "2012-10-17"
                                        },
                                        "policyName": "pipelinePipelineUpdatePipelineSelfMutateCodePipelineActionRoleDefaultPolicy09E3C254",
                                        "roles": [
                                          {
                                            "Ref": "pipelinePipelineUpdatePipelineSelfMutateCodePipelineActionRole616B0B5B"
                                          }
                                        ]
                                      }
                                    },
                                    "constructInfo": {
                                      "fqn": "monocdk.aws_iam.CfnPolicy",
                                      "version": "1.102.0"
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "monocdk.aws_iam.Policy",
                                  "version": "1.102.0"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "monocdk.aws_iam.Role",
                              "version": "1.102.0"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "monocdk.Construct",
                          "version": "1.102.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "monocdk.Construct",
                      "version": "1.102.0"
                    }
                  },
                  "starbound-stage": {
                    "id": "starbound-stage",
                    "path": "keuk/pipeline/Pipeline/starbound-stage",
                    "children": {
                      "server-stack.Deploy": {
                        "id": "server-stack.Deploy",
                        "path": "keuk/pipeline/Pipeline/starbound-stage/server-stack.Deploy",
                        "constructInfo": {
                          "fqn": "monocdk.Construct",
                          "version": "1.102.0"
                        }
                      },
                      "server-stack.Prepare": {
                        "id": "server-stack.Prepare",
                        "path": "keuk/pipeline/Pipeline/starbound-stage/server-stack.Prepare",
                        "constructInfo": {
                          "fqn": "monocdk.Construct",
                          "version": "1.102.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "monocdk.Construct",
                      "version": "1.102.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "monocdk.aws_codepipeline.Pipeline",
                  "version": "1.102.0"
                }
              },
              "UpdatePipeline": {
                "id": "UpdatePipeline",
                "path": "keuk/pipeline/UpdatePipeline",
                "children": {
                  "SelfMutation": {
                    "id": "SelfMutation",
                    "path": "keuk/pipeline/UpdatePipeline/SelfMutation",
                    "children": {
                      "Role": {
                        "id": "Role",
                        "path": "keuk/pipeline/UpdatePipeline/SelfMutation/Role",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "keuk/pipeline/UpdatePipeline/SelfMutation/Role/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                              "aws:cdk:cloudformation:props": {
                                "assumeRolePolicyDocument": {
                                  "Statement": [
                                    {
                                      "Action": "sts:AssumeRole",
                                      "Effect": "Allow",
                                      "Principal": {
                                        "Service": "codebuild.amazonaws.com"
                                      }
                                    }
                                  ],
                                  "Version": "2012-10-17"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "monocdk.aws_iam.CfnRole",
                              "version": "1.102.0"
                            }
                          },
                          "DefaultPolicy": {
                            "id": "DefaultPolicy",
                            "path": "keuk/pipeline/UpdatePipeline/SelfMutation/Role/DefaultPolicy",
                            "children": {
                              "Resource": {
                                "id": "Resource",
                                "path": "keuk/pipeline/UpdatePipeline/SelfMutation/Role/DefaultPolicy/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                                  "aws:cdk:cloudformation:props": {
                                    "policyDocument": {
                                      "Statement": [
                                        {
                                          "Action": [
                                            "logs:CreateLogGroup",
                                            "logs:CreateLogStream",
                                            "logs:PutLogEvents"
                                          ],
                                          "Effect": "Allow",
                                          "Resource": [
                                            {
                                              "Fn::Join": [
                                                "",
                                                [
                                                  "arn:",
                                                  {
                                                    "Ref": "AWS::Partition"
                                                  },
                                                  ":logs:",
                                                  {
                                                    "Ref": "AWS::Region"
                                                  },
                                                  ":",
                                                  {
                                                    "Ref": "AWS::AccountId"
                                                  },
                                                  ":log-group:/aws/codebuild/",
                                                  {
                                                    "Ref": "pipelineUpdatePipelineSelfMutation14A96D2F"
                                                  }
                                                ]
                                              ]
                                            },
                                            {
                                              "Fn::Join": [
                                                "",
                                                [
                                                  "arn:",
                                                  {
                                                    "Ref": "AWS::Partition"
                                                  },
                                                  ":logs:",
                                                  {
                                                    "Ref": "AWS::Region"
                                                  },
                                                  ":",
                                                  {
                                                    "Ref": "AWS::AccountId"
                                                  },
                                                  ":log-group:/aws/codebuild/",
                                                  {
                                                    "Ref": "pipelineUpdatePipelineSelfMutation14A96D2F"
                                                  },
                                                  ":*"
                                                ]
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "Action": [
                                            "codebuild:CreateReportGroup",
                                            "codebuild:CreateReport",
                                            "codebuild:UpdateReport",
                                            "codebuild:BatchPutTestCases",
                                            "codebuild:BatchPutCodeCoverages"
                                          ],
                                          "Effect": "Allow",
                                          "Resource": {
                                            "Fn::Join": [
                                              "",
                                              [
                                                "arn:",
                                                {
                                                  "Ref": "AWS::Partition"
                                                },
                                                ":codebuild:",
                                                {
                                                  "Ref": "AWS::Region"
                                                },
                                                ":",
                                                {
                                                  "Ref": "AWS::AccountId"
                                                },
                                                ":report-group/",
                                                {
                                                  "Ref": "pipelineUpdatePipelineSelfMutation14A96D2F"
                                                },
                                                "-*"
                                              ]
                                            ]
                                          }
                                        },
                                        {
                                          "Action": "sts:AssumeRole",
                                          "Effect": "Allow",
                                          "Resource": [
                                            "arn:*:iam::*:role/*-deploy-role-*",
                                            "arn:*:iam::*:role/*-publishing-role-*"
                                          ]
                                        },
                                        {
                                          "Action": "cloudformation:DescribeStacks",
                                          "Effect": "Allow",
                                          "Resource": "*"
                                        },
                                        {
                                          "Action": "s3:ListBucket",
                                          "Effect": "Allow",
                                          "Resource": "*"
                                        },
                                        {
                                          "Action": [
                                            "s3:GetObject*",
                                            "s3:GetBucket*",
                                            "s3:List*"
                                          ],
                                          "Effect": "Allow",
                                          "Resource": [
                                            {
                                              "Fn::GetAtt": [
                                                "pipelinePipelineArtifactsBucketC2CD5B5E",
                                                "Arn"
                                              ]
                                            },
                                            {
                                              "Fn::Join": [
                                                "",
                                                [
                                                  {
                                                    "Fn::GetAtt": [
                                                      "pipelinePipelineArtifactsBucketC2CD5B5E",
                                                      "Arn"
                                                    ]
                                                  },
                                                  "/*"
                                                ]
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "Action": [
                                            "kms:Decrypt",
                                            "kms:DescribeKey"
                                          ],
                                          "Effect": "Allow",
                                          "Resource": {
                                            "Fn::GetAtt": [
                                              "pipelinePipelineArtifactsBucketEncryptionKey56EE9D50",
                                              "Arn"
                                            ]
                                          }
                                        },
                                        {
                                          "Action": [
                                            "kms:Decrypt",
                                            "kms:Encrypt",
                                            "kms:ReEncrypt*",
                                            "kms:GenerateDataKey*"
                                          ],
                                          "Effect": "Allow",
                                          "Resource": {
                                            "Fn::GetAtt": [
                                              "pipelinePipelineArtifactsBucketEncryptionKey56EE9D50",
                                              "Arn"
                                            ]
                                          }
                                        }
                                      ],
                                      "Version": "2012-10-17"
                                    },
                                    "policyName": "pipelineUpdatePipelineSelfMutationRoleDefaultPolicy095404B8",
                                    "roles": [
                                      {
                                        "Ref": "pipelineUpdatePipelineSelfMutationRole91820177"
                                      }
                                    ]
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "monocdk.aws_iam.CfnPolicy",
                                  "version": "1.102.0"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "monocdk.aws_iam.Policy",
                              "version": "1.102.0"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "monocdk.aws_iam.Role",
                          "version": "1.102.0"
                        }
                      },
                      "Resource": {
                        "id": "Resource",
                        "path": "keuk/pipeline/UpdatePipeline/SelfMutation/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::CodeBuild::Project",
                          "aws:cdk:cloudformation:props": {
                            "artifacts": {
                              "type": "CODEPIPELINE"
                            },
                            "environment": {
                              "type": "LINUX_CONTAINER",
                              "image": "aws/codebuild/standard:5.0",
                              "imagePullCredentialsType": "CODEBUILD",
                              "privilegedMode": false,
                              "computeType": "BUILD_GENERAL1_SMALL"
                            },
                            "serviceRole": {
                              "Fn::GetAtt": [
                                "pipelineUpdatePipelineSelfMutationRole91820177",
                                "Arn"
                              ]
                            },
                            "source": {
                              "type": "CODEPIPELINE",
                              "buildSpec": "{\n  \"version\": \"0.2\",\n  \"phases\": {\n    \"install\": {\n      \"commands\": \"npm install -g aws-cdk\"\n    },\n    \"build\": {\n      \"commands\": [\n        \"cdk -a . deploy keuk --require-approval=never --verbose\"\n      ]\n    }\n  }\n}"
                            },
                            "encryptionKey": {
                              "Fn::GetAtt": [
                                "pipelinePipelineArtifactsBucketEncryptionKey56EE9D50",
                                "Arn"
                              ]
                            },
                            "name": "KeukboundDeployment-selfupdate"
                          }
                        },
                        "constructInfo": {
                          "fqn": "monocdk.aws_codebuild.CfnProject",
                          "version": "1.102.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "monocdk.aws_codebuild.PipelineProject",
                      "version": "1.102.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "monocdk.pipelines.UpdatePipelineAction",
                  "version": "1.102.0"
                }
              },
              "Assets": {
                "id": "Assets",
                "path": "keuk/pipeline/Assets",
                "constructInfo": {
                  "fqn": "monocdk.Construct",
                  "version": "1.102.0"
                }
              },
              "starbound-stage": {
                "id": "starbound-stage",
                "path": "keuk/pipeline/starbound-stage",
                "children": {
                  "arn:${AWS::Partition}:iam::${AWS::AccountId}:role--cdk-hnb659fds-deploy-role-${AWS::AccountId}-${AWS::Region}": {
                    "id": "arn:${AWS::Partition}:iam::${AWS::AccountId}:role--cdk-hnb659fds-deploy-role-${AWS::AccountId}-${AWS::Region}",
                    "path": "keuk/pipeline/starbound-stage/arn:${AWS::Partition}:iam::${AWS::AccountId}:role--cdk-hnb659fds-deploy-role-${AWS::AccountId}-${AWS::Region}",
                    "constructInfo": {
                      "fqn": "monocdk.Resource",
                      "version": "1.102.0"
                    }
                  },
                  "ImmutableRolearn:${AWS::Partition}:iam::${AWS::AccountId}:role--cdk-hnb659fds-deploy-role-${AWS::AccountId}-${AWS::Region}": {
                    "id": "ImmutableRolearn:${AWS::Partition}:iam::${AWS::AccountId}:role--cdk-hnb659fds-deploy-role-${AWS::AccountId}-${AWS::Region}",
                    "path": "keuk/pipeline/starbound-stage/ImmutableRolearn:${AWS::Partition}:iam::${AWS::AccountId}:role--cdk-hnb659fds-deploy-role-${AWS::AccountId}-${AWS::Region}",
                    "children": {
                      "8389e75f-0810-4838-bf64-d6f85a95cf83": {
                        "id": "8389e75f-0810-4838-bf64-d6f85a95cf83",
                        "path": "keuk/pipeline/starbound-stage/ImmutableRolearn:${AWS::Partition}:iam::${AWS::AccountId}:role--cdk-hnb659fds-deploy-role-${AWS::AccountId}-${AWS::Region}/8389e75f-0810-4838-bf64-d6f85a95cf83",
                        "constructInfo": {
                          "fqn": "monocdk.Construct",
                          "version": "1.102.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "monocdk.Resource",
                      "version": "1.102.0"
                    }
                  },
                  "arn:${AWS::Partition}:iam::${AWS::AccountId}:role--cdk-hnb659fds-cfn-exec-role-${AWS::AccountId}-${AWS::Region}": {
                    "id": "arn:${AWS::Partition}:iam::${AWS::AccountId}:role--cdk-hnb659fds-cfn-exec-role-${AWS::AccountId}-${AWS::Region}",
                    "path": "keuk/pipeline/starbound-stage/arn:${AWS::Partition}:iam::${AWS::AccountId}:role--cdk-hnb659fds-cfn-exec-role-${AWS::AccountId}-${AWS::Region}",
                    "constructInfo": {
                      "fqn": "monocdk.Resource",
                      "version": "1.102.0"
                    }
                  },
                  "ImmutableRolearn:${AWS::Partition}:iam::${AWS::AccountId}:role--cdk-hnb659fds-cfn-exec-role-${AWS::AccountId}-${AWS::Region}": {
                    "id": "ImmutableRolearn:${AWS::Partition}:iam::${AWS::AccountId}:role--cdk-hnb659fds-cfn-exec-role-${AWS::AccountId}-${AWS::Region}",
                    "path": "keuk/pipeline/starbound-stage/ImmutableRolearn:${AWS::Partition}:iam::${AWS::AccountId}:role--cdk-hnb659fds-cfn-exec-role-${AWS::AccountId}-${AWS::Region}",
                    "constructInfo": {
                      "fqn": "monocdk.Resource",
                      "version": "1.102.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "monocdk.pipelines.CdkStage",
                  "version": "1.102.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "monocdk.pipelines.CdkPipeline",
              "version": "1.102.0"
            }
          },
          "starbound-stage": {
            "id": "starbound-stage",
            "path": "keuk/starbound-stage",
            "children": {
              "server-stack": {
                "id": "server-stack",
                "path": "keuk/starbound-stage/server-stack",
                "children": {
                  "vpc": {
                    "id": "vpc",
                    "path": "keuk/starbound-stage/server-stack/vpc",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "keuk/starbound-stage/server-stack/vpc/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::EC2::VPC",
                          "aws:cdk:cloudformation:props": {
                            "cidrBlock": "10.0.0.0/16",
                            "enableDnsHostnames": true,
                            "enableDnsSupport": true,
                            "instanceTenancy": "default",
                            "tags": [
                              {
                                "key": "Name",
                                "value": "keuk/starbound-stage/server-stack/vpc"
                              }
                            ]
                          }
                        },
                        "constructInfo": {
                          "fqn": "monocdk.aws_ec2.CfnVPC",
                          "version": "1.102.0"
                        }
                      },
                      "PublicSubnet1": {
                        "id": "PublicSubnet1",
                        "path": "keuk/starbound-stage/server-stack/vpc/PublicSubnet1",
                        "children": {
                          "Subnet": {
                            "id": "Subnet",
                            "path": "keuk/starbound-stage/server-stack/vpc/PublicSubnet1/Subnet",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::EC2::Subnet",
                              "aws:cdk:cloudformation:props": {
                                "cidrBlock": "10.0.0.0/18",
                                "vpcId": {
                                  "Ref": "vpcA2121C38"
                                },
                                "availabilityZone": {
                                  "Fn::Select": [
                                    0,
                                    {
                                      "Fn::GetAZs": ""
                                    }
                                  ]
                                },
                                "mapPublicIpOnLaunch": true,
                                "tags": [
                                  {
                                    "key": "aws-cdk:subnet-name",
                                    "value": "Public"
                                  },
                                  {
                                    "key": "aws-cdk:subnet-type",
                                    "value": "Public"
                                  },
                                  {
                                    "key": "Name",
                                    "value": "keuk/starbound-stage/server-stack/vpc/PublicSubnet1"
                                  }
                                ]
                              }
                            },
                            "constructInfo": {
                              "fqn": "monocdk.aws_ec2.CfnSubnet",
                              "version": "1.102.0"
                            }
                          },
                          "Acl": {
                            "id": "Acl",
                            "path": "keuk/starbound-stage/server-stack/vpc/PublicSubnet1/Acl",
                            "constructInfo": {
                              "fqn": "monocdk.Resource",
                              "version": "1.102.0"
                            }
                          },
                          "RouteTable": {
                            "id": "RouteTable",
                            "path": "keuk/starbound-stage/server-stack/vpc/PublicSubnet1/RouteTable",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::EC2::RouteTable",
                              "aws:cdk:cloudformation:props": {
                                "vpcId": {
                                  "Ref": "vpcA2121C38"
                                },
                                "tags": [
                                  {
                                    "key": "Name",
                                    "value": "keuk/starbound-stage/server-stack/vpc/PublicSubnet1"
                                  }
                                ]
                              }
                            },
                            "constructInfo": {
                              "fqn": "monocdk.aws_ec2.CfnRouteTable",
                              "version": "1.102.0"
                            }
                          },
                          "RouteTableAssociation": {
                            "id": "RouteTableAssociation",
                            "path": "keuk/starbound-stage/server-stack/vpc/PublicSubnet1/RouteTableAssociation",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::EC2::SubnetRouteTableAssociation",
                              "aws:cdk:cloudformation:props": {
                                "routeTableId": {
                                  "Ref": "vpcPublicSubnet1RouteTable48A2DF9B"
                                },
                                "subnetId": {
                                  "Ref": "vpcPublicSubnet1Subnet2E65531E"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "monocdk.aws_ec2.CfnSubnetRouteTableAssociation",
                              "version": "1.102.0"
                            }
                          },
                          "DefaultRoute": {
                            "id": "DefaultRoute",
                            "path": "keuk/starbound-stage/server-stack/vpc/PublicSubnet1/DefaultRoute",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::EC2::Route",
                              "aws:cdk:cloudformation:props": {
                                "routeTableId": {
                                  "Ref": "vpcPublicSubnet1RouteTable48A2DF9B"
                                },
                                "destinationCidrBlock": "0.0.0.0/0",
                                "gatewayId": {
                                  "Ref": "vpcIGWE57CBDCA"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "monocdk.aws_ec2.CfnRoute",
                              "version": "1.102.0"
                            }
                          },
                          "EIP": {
                            "id": "EIP",
                            "path": "keuk/starbound-stage/server-stack/vpc/PublicSubnet1/EIP",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::EC2::EIP",
                              "aws:cdk:cloudformation:props": {
                                "domain": "vpc",
                                "tags": [
                                  {
                                    "key": "Name",
                                    "value": "keuk/starbound-stage/server-stack/vpc/PublicSubnet1"
                                  }
                                ]
                              }
                            },
                            "constructInfo": {
                              "fqn": "monocdk.aws_ec2.CfnEIP",
                              "version": "1.102.0"
                            }
                          },
                          "NATGateway": {
                            "id": "NATGateway",
                            "path": "keuk/starbound-stage/server-stack/vpc/PublicSubnet1/NATGateway",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::EC2::NatGateway",
                              "aws:cdk:cloudformation:props": {
                                "allocationId": {
                                  "Fn::GetAtt": [
                                    "vpcPublicSubnet1EIPDA49DCBE",
                                    "AllocationId"
                                  ]
                                },
                                "subnetId": {
                                  "Ref": "vpcPublicSubnet1Subnet2E65531E"
                                },
                                "tags": [
                                  {
                                    "key": "Name",
                                    "value": "keuk/starbound-stage/server-stack/vpc/PublicSubnet1"
                                  }
                                ]
                              }
                            },
                            "constructInfo": {
                              "fqn": "monocdk.aws_ec2.CfnNatGateway",
                              "version": "1.102.0"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "monocdk.aws_ec2.PublicSubnet",
                          "version": "1.102.0"
                        }
                      },
                      "PublicSubnet2": {
                        "id": "PublicSubnet2",
                        "path": "keuk/starbound-stage/server-stack/vpc/PublicSubnet2",
                        "children": {
                          "Subnet": {
                            "id": "Subnet",
                            "path": "keuk/starbound-stage/server-stack/vpc/PublicSubnet2/Subnet",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::EC2::Subnet",
                              "aws:cdk:cloudformation:props": {
                                "cidrBlock": "10.0.64.0/18",
                                "vpcId": {
                                  "Ref": "vpcA2121C38"
                                },
                                "availabilityZone": {
                                  "Fn::Select": [
                                    1,
                                    {
                                      "Fn::GetAZs": ""
                                    }
                                  ]
                                },
                                "mapPublicIpOnLaunch": true,
                                "tags": [
                                  {
                                    "key": "aws-cdk:subnet-name",
                                    "value": "Public"
                                  },
                                  {
                                    "key": "aws-cdk:subnet-type",
                                    "value": "Public"
                                  },
                                  {
                                    "key": "Name",
                                    "value": "keuk/starbound-stage/server-stack/vpc/PublicSubnet2"
                                  }
                                ]
                              }
                            },
                            "constructInfo": {
                              "fqn": "monocdk.aws_ec2.CfnSubnet",
                              "version": "1.102.0"
                            }
                          },
                          "Acl": {
                            "id": "Acl",
                            "path": "keuk/starbound-stage/server-stack/vpc/PublicSubnet2/Acl",
                            "constructInfo": {
                              "fqn": "monocdk.Resource",
                              "version": "1.102.0"
                            }
                          },
                          "RouteTable": {
                            "id": "RouteTable",
                            "path": "keuk/starbound-stage/server-stack/vpc/PublicSubnet2/RouteTable",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::EC2::RouteTable",
                              "aws:cdk:cloudformation:props": {
                                "vpcId": {
                                  "Ref": "vpcA2121C38"
                                },
                                "tags": [
                                  {
                                    "key": "Name",
                                    "value": "keuk/starbound-stage/server-stack/vpc/PublicSubnet2"
                                  }
                                ]
                              }
                            },
                            "constructInfo": {
                              "fqn": "monocdk.aws_ec2.CfnRouteTable",
                              "version": "1.102.0"
                            }
                          },
                          "RouteTableAssociation": {
                            "id": "RouteTableAssociation",
                            "path": "keuk/starbound-stage/server-stack/vpc/PublicSubnet2/RouteTableAssociation",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::EC2::SubnetRouteTableAssociation",
                              "aws:cdk:cloudformation:props": {
                                "routeTableId": {
                                  "Ref": "vpcPublicSubnet2RouteTableEB40D4CB"
                                },
                                "subnetId": {
                                  "Ref": "vpcPublicSubnet2Subnet009B674F"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "monocdk.aws_ec2.CfnSubnetRouteTableAssociation",
                              "version": "1.102.0"
                            }
                          },
                          "DefaultRoute": {
                            "id": "DefaultRoute",
                            "path": "keuk/starbound-stage/server-stack/vpc/PublicSubnet2/DefaultRoute",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::EC2::Route",
                              "aws:cdk:cloudformation:props": {
                                "routeTableId": {
                                  "Ref": "vpcPublicSubnet2RouteTableEB40D4CB"
                                },
                                "destinationCidrBlock": "0.0.0.0/0",
                                "gatewayId": {
                                  "Ref": "vpcIGWE57CBDCA"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "monocdk.aws_ec2.CfnRoute",
                              "version": "1.102.0"
                            }
                          },
                          "EIP": {
                            "id": "EIP",
                            "path": "keuk/starbound-stage/server-stack/vpc/PublicSubnet2/EIP",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::EC2::EIP",
                              "aws:cdk:cloudformation:props": {
                                "domain": "vpc",
                                "tags": [
                                  {
                                    "key": "Name",
                                    "value": "keuk/starbound-stage/server-stack/vpc/PublicSubnet2"
                                  }
                                ]
                              }
                            },
                            "constructInfo": {
                              "fqn": "monocdk.aws_ec2.CfnEIP",
                              "version": "1.102.0"
                            }
                          },
                          "NATGateway": {
                            "id": "NATGateway",
                            "path": "keuk/starbound-stage/server-stack/vpc/PublicSubnet2/NATGateway",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::EC2::NatGateway",
                              "aws:cdk:cloudformation:props": {
                                "allocationId": {
                                  "Fn::GetAtt": [
                                    "vpcPublicSubnet2EIP9B3743B1",
                                    "AllocationId"
                                  ]
                                },
                                "subnetId": {
                                  "Ref": "vpcPublicSubnet2Subnet009B674F"
                                },
                                "tags": [
                                  {
                                    "key": "Name",
                                    "value": "keuk/starbound-stage/server-stack/vpc/PublicSubnet2"
                                  }
                                ]
                              }
                            },
                            "constructInfo": {
                              "fqn": "monocdk.aws_ec2.CfnNatGateway",
                              "version": "1.102.0"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "monocdk.aws_ec2.PublicSubnet",
                          "version": "1.102.0"
                        }
                      },
                      "PrivateSubnet1": {
                        "id": "PrivateSubnet1",
                        "path": "keuk/starbound-stage/server-stack/vpc/PrivateSubnet1",
                        "children": {
                          "Subnet": {
                            "id": "Subnet",
                            "path": "keuk/starbound-stage/server-stack/vpc/PrivateSubnet1/Subnet",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::EC2::Subnet",
                              "aws:cdk:cloudformation:props": {
                                "cidrBlock": "10.0.128.0/18",
                                "vpcId": {
                                  "Ref": "vpcA2121C38"
                                },
                                "availabilityZone": {
                                  "Fn::Select": [
                                    0,
                                    {
                                      "Fn::GetAZs": ""
                                    }
                                  ]
                                },
                                "mapPublicIpOnLaunch": false,
                                "tags": [
                                  {
                                    "key": "aws-cdk:subnet-name",
                                    "value": "Private"
                                  },
                                  {
                                    "key": "aws-cdk:subnet-type",
                                    "value": "Private"
                                  },
                                  {
                                    "key": "Name",
                                    "value": "keuk/starbound-stage/server-stack/vpc/PrivateSubnet1"
                                  }
                                ]
                              }
                            },
                            "constructInfo": {
                              "fqn": "monocdk.aws_ec2.CfnSubnet",
                              "version": "1.102.0"
                            }
                          },
                          "Acl": {
                            "id": "Acl",
                            "path": "keuk/starbound-stage/server-stack/vpc/PrivateSubnet1/Acl",
                            "constructInfo": {
                              "fqn": "monocdk.Resource",
                              "version": "1.102.0"
                            }
                          },
                          "RouteTable": {
                            "id": "RouteTable",
                            "path": "keuk/starbound-stage/server-stack/vpc/PrivateSubnet1/RouteTable",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::EC2::RouteTable",
                              "aws:cdk:cloudformation:props": {
                                "vpcId": {
                                  "Ref": "vpcA2121C38"
                                },
                                "tags": [
                                  {
                                    "key": "Name",
                                    "value": "keuk/starbound-stage/server-stack/vpc/PrivateSubnet1"
                                  }
                                ]
                              }
                            },
                            "constructInfo": {
                              "fqn": "monocdk.aws_ec2.CfnRouteTable",
                              "version": "1.102.0"
                            }
                          },
                          "RouteTableAssociation": {
                            "id": "RouteTableAssociation",
                            "path": "keuk/starbound-stage/server-stack/vpc/PrivateSubnet1/RouteTableAssociation",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::EC2::SubnetRouteTableAssociation",
                              "aws:cdk:cloudformation:props": {
                                "routeTableId": {
                                  "Ref": "vpcPrivateSubnet1RouteTableB41A48CC"
                                },
                                "subnetId": {
                                  "Ref": "vpcPrivateSubnet1Subnet934893E8"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "monocdk.aws_ec2.CfnSubnetRouteTableAssociation",
                              "version": "1.102.0"
                            }
                          },
                          "DefaultRoute": {
                            "id": "DefaultRoute",
                            "path": "keuk/starbound-stage/server-stack/vpc/PrivateSubnet1/DefaultRoute",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::EC2::Route",
                              "aws:cdk:cloudformation:props": {
                                "routeTableId": {
                                  "Ref": "vpcPrivateSubnet1RouteTableB41A48CC"
                                },
                                "destinationCidrBlock": "0.0.0.0/0",
                                "natGatewayId": {
                                  "Ref": "vpcPublicSubnet1NATGateway9C16659E"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "monocdk.aws_ec2.CfnRoute",
                              "version": "1.102.0"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "monocdk.aws_ec2.PrivateSubnet",
                          "version": "1.102.0"
                        }
                      },
                      "PrivateSubnet2": {
                        "id": "PrivateSubnet2",
                        "path": "keuk/starbound-stage/server-stack/vpc/PrivateSubnet2",
                        "children": {
                          "Subnet": {
                            "id": "Subnet",
                            "path": "keuk/starbound-stage/server-stack/vpc/PrivateSubnet2/Subnet",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::EC2::Subnet",
                              "aws:cdk:cloudformation:props": {
                                "cidrBlock": "10.0.192.0/18",
                                "vpcId": {
                                  "Ref": "vpcA2121C38"
                                },
                                "availabilityZone": {
                                  "Fn::Select": [
                                    1,
                                    {
                                      "Fn::GetAZs": ""
                                    }
                                  ]
                                },
                                "mapPublicIpOnLaunch": false,
                                "tags": [
                                  {
                                    "key": "aws-cdk:subnet-name",
                                    "value": "Private"
                                  },
                                  {
                                    "key": "aws-cdk:subnet-type",
                                    "value": "Private"
                                  },
                                  {
                                    "key": "Name",
                                    "value": "keuk/starbound-stage/server-stack/vpc/PrivateSubnet2"
                                  }
                                ]
                              }
                            },
                            "constructInfo": {
                              "fqn": "monocdk.aws_ec2.CfnSubnet",
                              "version": "1.102.0"
                            }
                          },
                          "Acl": {
                            "id": "Acl",
                            "path": "keuk/starbound-stage/server-stack/vpc/PrivateSubnet2/Acl",
                            "constructInfo": {
                              "fqn": "monocdk.Resource",
                              "version": "1.102.0"
                            }
                          },
                          "RouteTable": {
                            "id": "RouteTable",
                            "path": "keuk/starbound-stage/server-stack/vpc/PrivateSubnet2/RouteTable",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::EC2::RouteTable",
                              "aws:cdk:cloudformation:props": {
                                "vpcId": {
                                  "Ref": "vpcA2121C38"
                                },
                                "tags": [
                                  {
                                    "key": "Name",
                                    "value": "keuk/starbound-stage/server-stack/vpc/PrivateSubnet2"
                                  }
                                ]
                              }
                            },
                            "constructInfo": {
                              "fqn": "monocdk.aws_ec2.CfnRouteTable",
                              "version": "1.102.0"
                            }
                          },
                          "RouteTableAssociation": {
                            "id": "RouteTableAssociation",
                            "path": "keuk/starbound-stage/server-stack/vpc/PrivateSubnet2/RouteTableAssociation",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::EC2::SubnetRouteTableAssociation",
                              "aws:cdk:cloudformation:props": {
                                "routeTableId": {
                                  "Ref": "vpcPrivateSubnet2RouteTable7280F23E"
                                },
                                "subnetId": {
                                  "Ref": "vpcPrivateSubnet2Subnet7031C2BA"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "monocdk.aws_ec2.CfnSubnetRouteTableAssociation",
                              "version": "1.102.0"
                            }
                          },
                          "DefaultRoute": {
                            "id": "DefaultRoute",
                            "path": "keuk/starbound-stage/server-stack/vpc/PrivateSubnet2/DefaultRoute",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::EC2::Route",
                              "aws:cdk:cloudformation:props": {
                                "routeTableId": {
                                  "Ref": "vpcPrivateSubnet2RouteTable7280F23E"
                                },
                                "destinationCidrBlock": "0.0.0.0/0",
                                "natGatewayId": {
                                  "Ref": "vpcPublicSubnet2NATGateway9B8AE11A"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "monocdk.aws_ec2.CfnRoute",
                              "version": "1.102.0"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "monocdk.aws_ec2.PrivateSubnet",
                          "version": "1.102.0"
                        }
                      },
                      "IGW": {
                        "id": "IGW",
                        "path": "keuk/starbound-stage/server-stack/vpc/IGW",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::EC2::InternetGateway",
                          "aws:cdk:cloudformation:props": {
                            "tags": [
                              {
                                "key": "Name",
                                "value": "keuk/starbound-stage/server-stack/vpc"
                              }
                            ]
                          }
                        },
                        "constructInfo": {
                          "fqn": "monocdk.aws_ec2.CfnInternetGateway",
                          "version": "1.102.0"
                        }
                      },
                      "VPCGW": {
                        "id": "VPCGW",
                        "path": "keuk/starbound-stage/server-stack/vpc/VPCGW",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::EC2::VPCGatewayAttachment",
                          "aws:cdk:cloudformation:props": {
                            "vpcId": {
                              "Ref": "vpcA2121C38"
                            },
                            "internetGatewayId": {
                              "Ref": "vpcIGWE57CBDCA"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "monocdk.aws_ec2.CfnVPCGatewayAttachment",
                          "version": "1.102.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "monocdk.aws_ec2.Vpc",
                      "version": "1.102.0"
                    }
                  },
                  "cluster": {
                    "id": "cluster",
                    "path": "keuk/starbound-stage/server-stack/cluster",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "keuk/starbound-stage/server-stack/cluster/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::ECS::Cluster",
                          "aws:cdk:cloudformation:props": {}
                        },
                        "constructInfo": {
                          "fqn": "monocdk.aws_ecs.CfnCluster",
                          "version": "1.102.0"
                        }
                      },
                      "DefaultAutoScalingGroup": {
                        "id": "DefaultAutoScalingGroup",
                        "path": "keuk/starbound-stage/server-stack/cluster/DefaultAutoScalingGroup",
                        "children": {
                          "InstanceSecurityGroup": {
                            "id": "InstanceSecurityGroup",
                            "path": "keuk/starbound-stage/server-stack/cluster/DefaultAutoScalingGroup/InstanceSecurityGroup",
                            "children": {
                              "Resource": {
                                "id": "Resource",
                                "path": "keuk/starbound-stage/server-stack/cluster/DefaultAutoScalingGroup/InstanceSecurityGroup/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::EC2::SecurityGroup",
                                  "aws:cdk:cloudformation:props": {
                                    "groupDescription": "keuk/starbound-stage/server-stack/cluster/DefaultAutoScalingGroup/InstanceSecurityGroup",
                                    "securityGroupEgress": [
                                      {
                                        "cidrIp": "0.0.0.0/0",
                                        "description": "Allow all outbound traffic by default",
                                        "ipProtocol": "-1"
                                      }
                                    ],
                                    "tags": [
                                      {
                                        "key": "Name",
                                        "value": "keuk/starbound-stage/server-stack/cluster/DefaultAutoScalingGroup"
                                      }
                                    ],
                                    "vpcId": {
                                      "Ref": "vpcA2121C38"
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "monocdk.aws_ec2.CfnSecurityGroup",
                                  "version": "1.102.0"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "monocdk.aws_ec2.SecurityGroup",
                              "version": "1.102.0"
                            }
                          },
                          "InstanceRole": {
                            "id": "InstanceRole",
                            "path": "keuk/starbound-stage/server-stack/cluster/DefaultAutoScalingGroup/InstanceRole",
                            "children": {
                              "Resource": {
                                "id": "Resource",
                                "path": "keuk/starbound-stage/server-stack/cluster/DefaultAutoScalingGroup/InstanceRole/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                                  "aws:cdk:cloudformation:props": {
                                    "assumeRolePolicyDocument": {
                                      "Statement": [
                                        {
                                          "Action": "sts:AssumeRole",
                                          "Effect": "Allow",
                                          "Principal": {
                                            "Service": {
                                              "Fn::Join": [
                                                "",
                                                [
                                                  "ec2.",
                                                  {
                                                    "Ref": "AWS::URLSuffix"
                                                  }
                                                ]
                                              ]
                                            }
                                          }
                                        }
                                      ],
                                      "Version": "2012-10-17"
                                    },
                                    "tags": [
                                      {
                                        "key": "Name",
                                        "value": "keuk/starbound-stage/server-stack/cluster/DefaultAutoScalingGroup"
                                      }
                                    ]
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "monocdk.aws_iam.CfnRole",
                                  "version": "1.102.0"
                                }
                              },
                              "DefaultPolicy": {
                                "id": "DefaultPolicy",
                                "path": "keuk/starbound-stage/server-stack/cluster/DefaultAutoScalingGroup/InstanceRole/DefaultPolicy",
                                "children": {
                                  "Resource": {
                                    "id": "Resource",
                                    "path": "keuk/starbound-stage/server-stack/cluster/DefaultAutoScalingGroup/InstanceRole/DefaultPolicy/Resource",
                                    "attributes": {
                                      "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                                      "aws:cdk:cloudformation:props": {
                                        "policyDocument": {
                                          "Statement": [
                                            {
                                              "Action": [
                                                "ecs:DeregisterContainerInstance",
                                                "ecs:RegisterContainerInstance",
                                                "ecs:Submit*"
                                              ],
                                              "Effect": "Allow",
                                              "Resource": {
                                                "Fn::GetAtt": [
                                                  "cluster611F8AFF",
                                                  "Arn"
                                                ]
                                              }
                                            },
                                            {
                                              "Action": [
                                                "ecs:Poll",
                                                "ecs:StartTelemetrySession"
                                              ],
                                              "Condition": {
                                                "ArnEquals": {
                                                  "ecs:cluster": {
                                                    "Fn::GetAtt": [
                                                      "cluster611F8AFF",
                                                      "Arn"
                                                    ]
                                                  }
                                                }
                                              },
                                              "Effect": "Allow",
                                              "Resource": "*"
                                            },
                                            {
                                              "Action": [
                                                "ecs:DiscoverPollEndpoint",
                                                "ecr:GetAuthorizationToken",
                                                "logs:CreateLogStream",
                                                "logs:PutLogEvents"
                                              ],
                                              "Effect": "Allow",
                                              "Resource": "*"
                                            }
                                          ],
                                          "Version": "2012-10-17"
                                        },
                                        "policyName": "clusterDefaultAutoScalingGroupInstanceRoleDefaultPolicyFBC91645",
                                        "roles": [
                                          {
                                            "Ref": "clusterDefaultAutoScalingGroupInstanceRole98EFF504"
                                          }
                                        ]
                                      }
                                    },
                                    "constructInfo": {
                                      "fqn": "monocdk.aws_iam.CfnPolicy",
                                      "version": "1.102.0"
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "monocdk.aws_iam.Policy",
                                  "version": "1.102.0"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "monocdk.aws_iam.Role",
                              "version": "1.102.0"
                            }
                          },
                          "InstanceProfile": {
                            "id": "InstanceProfile",
                            "path": "keuk/starbound-stage/server-stack/cluster/DefaultAutoScalingGroup/InstanceProfile",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::IAM::InstanceProfile",
                              "aws:cdk:cloudformation:props": {
                                "roles": [
                                  {
                                    "Ref": "clusterDefaultAutoScalingGroupInstanceRole98EFF504"
                                  }
                                ]
                              }
                            },
                            "constructInfo": {
                              "fqn": "monocdk.aws_iam.CfnInstanceProfile",
                              "version": "1.102.0"
                            }
                          },
                          "LaunchConfig": {
                            "id": "LaunchConfig",
                            "path": "keuk/starbound-stage/server-stack/cluster/DefaultAutoScalingGroup/LaunchConfig",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::AutoScaling::LaunchConfiguration",
                              "aws:cdk:cloudformation:props": {
                                "imageId": "{{resolve:ssm:/aws/service/ecs/optimized-ami/amazon-linux-2/recommended/image_id}}",
                                "instanceType": "c5.xlarge",
                                "iamInstanceProfile": {
                                  "Ref": "clusterDefaultAutoScalingGroupInstanceProfileC240B524"
                                },
                                "securityGroups": [
                                  {
                                    "Fn::GetAtt": [
                                      "clusterDefaultAutoScalingGroupInstanceSecurityGroup02B5B205",
                                      "GroupId"
                                    ]
                                  }
                                ],
                                "userData": {
                                  "Fn::Base64": {
                                    "Fn::Join": [
                                      "",
                                      [
                                        "#!/bin/bash\necho ECS_CLUSTER=",
                                        {
                                          "Ref": "cluster611F8AFF"
                                        },
                                        " >> /etc/ecs/ecs.config\nsudo iptables --insert FORWARD 1 --in-interface docker+ --destination 169.254.169.254/32 --jump DROP\nsudo service iptables save\necho ECS_AWSVPC_BLOCK_IMDS=true >> /etc/ecs/ecs.config"
                                      ]
                                    ]
                                  }
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "monocdk.aws_autoscaling.CfnLaunchConfiguration",
                              "version": "1.102.0"
                            }
                          },
                          "ASG": {
                            "id": "ASG",
                            "path": "keuk/starbound-stage/server-stack/cluster/DefaultAutoScalingGroup/ASG",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::AutoScaling::AutoScalingGroup",
                              "aws:cdk:cloudformation:props": {
                                "maxSize": "1",
                                "minSize": "1",
                                "launchConfigurationName": {
                                  "Ref": "clusterDefaultAutoScalingGroupLaunchConfigEC006908"
                                },
                                "tags": [
                                  {
                                    "key": "Name",
                                    "value": "keuk/starbound-stage/server-stack/cluster/DefaultAutoScalingGroup",
                                    "propagateAtLaunch": true
                                  }
                                ],
                                "vpcZoneIdentifier": [
                                  {
                                    "Ref": "vpcPrivateSubnet1Subnet934893E8"
                                  },
                                  {
                                    "Ref": "vpcPrivateSubnet2Subnet7031C2BA"
                                  }
                                ]
                              }
                            },
                            "constructInfo": {
                              "fqn": "monocdk.aws_autoscaling.CfnAutoScalingGroup",
                              "version": "1.102.0"
                            }
                          },
                          "DrainECSHook": {
                            "id": "DrainECSHook",
                            "path": "keuk/starbound-stage/server-stack/cluster/DefaultAutoScalingGroup/DrainECSHook",
                            "children": {
                              "Function": {
                                "id": "Function",
                                "path": "keuk/starbound-stage/server-stack/cluster/DefaultAutoScalingGroup/DrainECSHook/Function",
                                "children": {
                                  "ServiceRole": {
                                    "id": "ServiceRole",
                                    "path": "keuk/starbound-stage/server-stack/cluster/DefaultAutoScalingGroup/DrainECSHook/Function/ServiceRole",
                                    "children": {
                                      "Resource": {
                                        "id": "Resource",
                                        "path": "keuk/starbound-stage/server-stack/cluster/DefaultAutoScalingGroup/DrainECSHook/Function/ServiceRole/Resource",
                                        "attributes": {
                                          "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                                          "aws:cdk:cloudformation:props": {
                                            "assumeRolePolicyDocument": {
                                              "Statement": [
                                                {
                                                  "Action": "sts:AssumeRole",
                                                  "Effect": "Allow",
                                                  "Principal": {
                                                    "Service": "lambda.amazonaws.com"
                                                  }
                                                }
                                              ],
                                              "Version": "2012-10-17"
                                            },
                                            "managedPolicyArns": [
                                              {
                                                "Fn::Join": [
                                                  "",
                                                  [
                                                    "arn:",
                                                    {
                                                      "Ref": "AWS::Partition"
                                                    },
                                                    ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                                                  ]
                                                ]
                                              }
                                            ],
                                            "tags": [
                                              {
                                                "key": "Name",
                                                "value": "keuk/starbound-stage/server-stack/cluster/DefaultAutoScalingGroup"
                                              }
                                            ]
                                          }
                                        },
                                        "constructInfo": {
                                          "fqn": "monocdk.aws_iam.CfnRole",
                                          "version": "1.102.0"
                                        }
                                      },
                                      "DefaultPolicy": {
                                        "id": "DefaultPolicy",
                                        "path": "keuk/starbound-stage/server-stack/cluster/DefaultAutoScalingGroup/DrainECSHook/Function/ServiceRole/DefaultPolicy",
                                        "children": {
                                          "Resource": {
                                            "id": "Resource",
                                            "path": "keuk/starbound-stage/server-stack/cluster/DefaultAutoScalingGroup/DrainECSHook/Function/ServiceRole/DefaultPolicy/Resource",
                                            "attributes": {
                                              "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                                              "aws:cdk:cloudformation:props": {
                                                "policyDocument": {
                                                  "Statement": [
                                                    {
                                                      "Action": [
                                                        "ec2:DescribeInstances",
                                                        "ec2:DescribeInstanceAttribute",
                                                        "ec2:DescribeInstanceStatus",
                                                        "ec2:DescribeHosts"
                                                      ],
                                                      "Effect": "Allow",
                                                      "Resource": "*"
                                                    },
                                                    {
                                                      "Action": "autoscaling:CompleteLifecycleAction",
                                                      "Effect": "Allow",
                                                      "Resource": {
                                                        "Fn::Join": [
                                                          "",
                                                          [
                                                            "arn:",
                                                            {
                                                              "Ref": "AWS::Partition"
                                                            },
                                                            ":autoscaling:",
                                                            {
                                                              "Ref": "AWS::Region"
                                                            },
                                                            ":",
                                                            {
                                                              "Ref": "AWS::AccountId"
                                                            },
                                                            ":autoScalingGroup:*:autoScalingGroupName/",
                                                            {
                                                              "Ref": "clusterDefaultAutoScalingGroupASG03807708"
                                                            }
                                                          ]
                                                        ]
                                                      }
                                                    },
                                                    {
                                                      "Action": [
                                                        "ecs:DescribeContainerInstances",
                                                        "ecs:DescribeTasks"
                                                      ],
                                                      "Condition": {
                                                        "ArnEquals": {
                                                          "ecs:cluster": {
                                                            "Fn::GetAtt": [
                                                              "cluster611F8AFF",
                                                              "Arn"
                                                            ]
                                                          }
                                                        }
                                                      },
                                                      "Effect": "Allow",
                                                      "Resource": "*"
                                                    },
                                                    {
                                                      "Action": [
                                                        "ecs:ListContainerInstances",
                                                        "ecs:SubmitContainerStateChange",
                                                        "ecs:SubmitTaskStateChange"
                                                      ],
                                                      "Effect": "Allow",
                                                      "Resource": {
                                                        "Fn::GetAtt": [
                                                          "cluster611F8AFF",
                                                          "Arn"
                                                        ]
                                                      }
                                                    },
                                                    {
                                                      "Action": [
                                                        "ecs:UpdateContainerInstancesState",
                                                        "ecs:ListTasks"
                                                      ],
                                                      "Condition": {
                                                        "ArnEquals": {
                                                          "ecs:cluster": {
                                                            "Fn::GetAtt": [
                                                              "cluster611F8AFF",
                                                              "Arn"
                                                            ]
                                                          }
                                                        }
                                                      },
                                                      "Effect": "Allow",
                                                      "Resource": "*"
                                                    }
                                                  ],
                                                  "Version": "2012-10-17"
                                                },
                                                "policyName": "clusterDefaultAutoScalingGroupDrainECSHookFunctionServiceRoleDefaultPolicyC2015014",
                                                "roles": [
                                                  {
                                                    "Ref": "clusterDefaultAutoScalingGroupDrainECSHookFunctionServiceRoleC8398058"
                                                  }
                                                ]
                                              }
                                            },
                                            "constructInfo": {
                                              "fqn": "monocdk.aws_iam.CfnPolicy",
                                              "version": "1.102.0"
                                            }
                                          }
                                        },
                                        "constructInfo": {
                                          "fqn": "monocdk.aws_iam.Policy",
                                          "version": "1.102.0"
                                        }
                                      }
                                    },
                                    "constructInfo": {
                                      "fqn": "monocdk.aws_iam.Role",
                                      "version": "1.102.0"
                                    }
                                  },
                                  "Resource": {
                                    "id": "Resource",
                                    "path": "keuk/starbound-stage/server-stack/cluster/DefaultAutoScalingGroup/DrainECSHook/Function/Resource",
                                    "attributes": {
                                      "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                                      "aws:cdk:cloudformation:props": {
                                        "code": {
                                          "zipFile": "import boto3, json, os, time\n\necs = boto3.client('ecs')\nautoscaling = boto3.client('autoscaling')\n\n\ndef lambda_handler(event, context):\n  print(json.dumps(event))\n  cluster = os.environ['CLUSTER']\n  snsTopicArn = event['Records'][0]['Sns']['TopicArn']\n  lifecycle_event = json.loads(event['Records'][0]['Sns']['Message'])\n  instance_id = lifecycle_event.get('EC2InstanceId')\n  if not instance_id:\n    print('Got event without EC2InstanceId: %s', json.dumps(event))\n    return\n\n  instance_arn = container_instance_arn(cluster, instance_id)\n  print('Instance %s has container instance ARN %s' % (lifecycle_event['EC2InstanceId'], instance_arn))\n\n  if not instance_arn:\n    return\n\n  task_arns = container_instance_task_arns(cluster, instance_arn)\n  \n  if task_arns:\n    print('Instance ARN %s has task ARNs %s' % (instance_arn, ', '.join(task_arns)))\n\n  while has_tasks(cluster, instance_arn, task_arns):\n    time.sleep(10)\n\n  try:\n    print('Terminating instance %s' % instance_id)\n    autoscaling.complete_lifecycle_action(\n        LifecycleActionResult='CONTINUE',\n        **pick(lifecycle_event, 'LifecycleHookName', 'LifecycleActionToken', 'AutoScalingGroupName'))\n  except Exception as e:\n    # Lifecycle action may have already completed.\n    print(str(e))\n\n\ndef container_instance_arn(cluster, instance_id):\n  \"\"\"Turn an instance ID into a container instance ARN.\"\"\"\n  arns = ecs.list_container_instances(cluster=cluster, filter='ec2InstanceId==' + instance_id)['containerInstanceArns']\n  if not arns:\n    return None\n  return arns[0]\n\ndef container_instance_task_arns(cluster, instance_arn):\n  \"\"\"Fetch tasks for a container instance ARN.\"\"\"\n  arns = ecs.list_tasks(cluster=cluster, containerInstance=instance_arn)['taskArns']\n  return arns\n\ndef has_tasks(cluster, instance_arn, task_arns):\n  \"\"\"Return True if the instance is running tasks for the given cluster.\"\"\"\n  instances = ecs.describe_container_instances(cluster=cluster, containerInstances=[instance_arn])['containerInstances']\n  if not instances:\n    return False\n  instance = instances[0]\n\n  if instance['status'] == 'ACTIVE':\n    # Start draining, then try again later\n    set_container_instance_to_draining(cluster, instance_arn)\n    return True\n\n  task_count = None\n\n  if task_arns:\n    # Fetch details for tasks running on the container instance\n    tasks = ecs.describe_tasks(cluster=cluster, tasks=task_arns)['tasks']\n    if tasks:\n      # Consider any non-stopped tasks as running\n      task_count = sum(task['lastStatus'] != 'STOPPED' for task in tasks) + instance['pendingTasksCount']\n  \n  if not task_count:\n    # Fallback to instance task counts if detailed task information is unavailable\n    task_count = instance['runningTasksCount'] + instance['pendingTasksCount']\n    \n  print('Instance %s has %s tasks' % (instance_arn, task_count))\n\n  return task_count > 0\n\ndef set_container_instance_to_draining(cluster, instance_arn):\n  ecs.update_container_instances_state(\n      cluster=cluster,\n      containerInstances=[instance_arn], status='DRAINING')\n\n\ndef pick(dct, *keys):\n  \"\"\"Pick a subset of a dict.\"\"\"\n  return {k: v for k, v in dct.items() if k in keys}\n"
                                        },
                                        "role": {
                                          "Fn::GetAtt": [
                                            "clusterDefaultAutoScalingGroupDrainECSHookFunctionServiceRoleC8398058",
                                            "Arn"
                                          ]
                                        },
                                        "environment": {
                                          "variables": {
                                            "CLUSTER": {
                                              "Ref": "cluster611F8AFF"
                                            }
                                          }
                                        },
                                        "handler": "index.lambda_handler",
                                        "runtime": "python3.6",
                                        "tags": [
                                          {
                                            "key": "Name",
                                            "value": "keuk/starbound-stage/server-stack/cluster/DefaultAutoScalingGroup"
                                          }
                                        ],
                                        "timeout": 310
                                      }
                                    },
                                    "constructInfo": {
                                      "fqn": "monocdk.aws_lambda.CfnFunction",
                                      "version": "1.102.0"
                                    }
                                  },
                                  "AllowInvoke:keukstarboundstageserverstackclusterDefaultAutoScalingGroupLifecycleHookDrainHookTopic993D2FFC": {
                                    "id": "AllowInvoke:keukstarboundstageserverstackclusterDefaultAutoScalingGroupLifecycleHookDrainHookTopic993D2FFC",
                                    "path": "keuk/starbound-stage/server-stack/cluster/DefaultAutoScalingGroup/DrainECSHook/Function/AllowInvoke:keukstarboundstageserverstackclusterDefaultAutoScalingGroupLifecycleHookDrainHookTopic993D2FFC",
                                    "attributes": {
                                      "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                                      "aws:cdk:cloudformation:props": {
                                        "action": "lambda:InvokeFunction",
                                        "functionName": {
                                          "Fn::GetAtt": [
                                            "clusterDefaultAutoScalingGroupDrainECSHookFunctionB217787A",
                                            "Arn"
                                          ]
                                        },
                                        "principal": "sns.amazonaws.com",
                                        "sourceArn": {
                                          "Ref": "clusterDefaultAutoScalingGroupLifecycleHookDrainHookTopicC8A9EF85"
                                        }
                                      }
                                    },
                                    "constructInfo": {
                                      "fqn": "monocdk.aws_lambda.CfnPermission",
                                      "version": "1.102.0"
                                    }
                                  },
                                  "Topic": {
                                    "id": "Topic",
                                    "path": "keuk/starbound-stage/server-stack/cluster/DefaultAutoScalingGroup/DrainECSHook/Function/Topic",
                                    "children": {
                                      "Resource": {
                                        "id": "Resource",
                                        "path": "keuk/starbound-stage/server-stack/cluster/DefaultAutoScalingGroup/DrainECSHook/Function/Topic/Resource",
                                        "attributes": {
                                          "aws:cdk:cloudformation:type": "AWS::SNS::Subscription",
                                          "aws:cdk:cloudformation:props": {
                                            "protocol": "lambda",
                                            "topicArn": {
                                              "Ref": "clusterDefaultAutoScalingGroupLifecycleHookDrainHookTopicC8A9EF85"
                                            },
                                            "endpoint": {
                                              "Fn::GetAtt": [
                                                "clusterDefaultAutoScalingGroupDrainECSHookFunctionB217787A",
                                                "Arn"
                                              ]
                                            }
                                          }
                                        },
                                        "constructInfo": {
                                          "fqn": "monocdk.aws_sns.CfnSubscription",
                                          "version": "1.102.0"
                                        }
                                      }
                                    },
                                    "constructInfo": {
                                      "fqn": "monocdk.aws_sns.Subscription",
                                      "version": "1.102.0"
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "monocdk.aws_lambda.Function",
                                  "version": "1.102.0"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "monocdk.Construct",
                              "version": "1.102.0"
                            }
                          },
                          "LifecycleHookDrainHook": {
                            "id": "LifecycleHookDrainHook",
                            "path": "keuk/starbound-stage/server-stack/cluster/DefaultAutoScalingGroup/LifecycleHookDrainHook",
                            "children": {
                              "Role": {
                                "id": "Role",
                                "path": "keuk/starbound-stage/server-stack/cluster/DefaultAutoScalingGroup/LifecycleHookDrainHook/Role",
                                "children": {
                                  "Resource": {
                                    "id": "Resource",
                                    "path": "keuk/starbound-stage/server-stack/cluster/DefaultAutoScalingGroup/LifecycleHookDrainHook/Role/Resource",
                                    "attributes": {
                                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                                      "aws:cdk:cloudformation:props": {
                                        "assumeRolePolicyDocument": {
                                          "Statement": [
                                            {
                                              "Action": "sts:AssumeRole",
                                              "Effect": "Allow",
                                              "Principal": {
                                                "Service": "autoscaling.amazonaws.com"
                                              }
                                            }
                                          ],
                                          "Version": "2012-10-17"
                                        },
                                        "tags": [
                                          {
                                            "key": "Name",
                                            "value": "keuk/starbound-stage/server-stack/cluster/DefaultAutoScalingGroup"
                                          }
                                        ]
                                      }
                                    },
                                    "constructInfo": {
                                      "fqn": "monocdk.aws_iam.CfnRole",
                                      "version": "1.102.0"
                                    }
                                  },
                                  "DefaultPolicy": {
                                    "id": "DefaultPolicy",
                                    "path": "keuk/starbound-stage/server-stack/cluster/DefaultAutoScalingGroup/LifecycleHookDrainHook/Role/DefaultPolicy",
                                    "children": {
                                      "Resource": {
                                        "id": "Resource",
                                        "path": "keuk/starbound-stage/server-stack/cluster/DefaultAutoScalingGroup/LifecycleHookDrainHook/Role/DefaultPolicy/Resource",
                                        "attributes": {
                                          "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                                          "aws:cdk:cloudformation:props": {
                                            "policyDocument": {
                                              "Statement": [
                                                {
                                                  "Action": "sns:Publish",
                                                  "Effect": "Allow",
                                                  "Resource": {
                                                    "Ref": "clusterDefaultAutoScalingGroupLifecycleHookDrainHookTopicC8A9EF85"
                                                  }
                                                }
                                              ],
                                              "Version": "2012-10-17"
                                            },
                                            "policyName": "clusterDefaultAutoScalingGroupLifecycleHookDrainHookRoleDefaultPolicyB8C7E1BD",
                                            "roles": [
                                              {
                                                "Ref": "clusterDefaultAutoScalingGroupLifecycleHookDrainHookRole3AE4A0D5"
                                              }
                                            ]
                                          }
                                        },
                                        "constructInfo": {
                                          "fqn": "monocdk.aws_iam.CfnPolicy",
                                          "version": "1.102.0"
                                        }
                                      }
                                    },
                                    "constructInfo": {
                                      "fqn": "monocdk.aws_iam.Policy",
                                      "version": "1.102.0"
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "monocdk.aws_iam.Role",
                                  "version": "1.102.0"
                                }
                              },
                              "Topic": {
                                "id": "Topic",
                                "path": "keuk/starbound-stage/server-stack/cluster/DefaultAutoScalingGroup/LifecycleHookDrainHook/Topic",
                                "children": {
                                  "Resource": {
                                    "id": "Resource",
                                    "path": "keuk/starbound-stage/server-stack/cluster/DefaultAutoScalingGroup/LifecycleHookDrainHook/Topic/Resource",
                                    "attributes": {
                                      "aws:cdk:cloudformation:type": "AWS::SNS::Topic",
                                      "aws:cdk:cloudformation:props": {
                                        "tags": [
                                          {
                                            "key": "Name",
                                            "value": "keuk/starbound-stage/server-stack/cluster/DefaultAutoScalingGroup"
                                          }
                                        ]
                                      }
                                    },
                                    "constructInfo": {
                                      "fqn": "monocdk.aws_sns.CfnTopic",
                                      "version": "1.102.0"
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "monocdk.aws_sns.Topic",
                                  "version": "1.102.0"
                                }
                              },
                              "Resource": {
                                "id": "Resource",
                                "path": "keuk/starbound-stage/server-stack/cluster/DefaultAutoScalingGroup/LifecycleHookDrainHook/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::AutoScaling::LifecycleHook",
                                  "aws:cdk:cloudformation:props": {
                                    "autoScalingGroupName": {
                                      "Ref": "clusterDefaultAutoScalingGroupASG03807708"
                                    },
                                    "lifecycleTransition": "autoscaling:EC2_INSTANCE_TERMINATING",
                                    "defaultResult": "CONTINUE",
                                    "heartbeatTimeout": 300,
                                    "notificationTargetArn": {
                                      "Ref": "clusterDefaultAutoScalingGroupLifecycleHookDrainHookTopicC8A9EF85"
                                    },
                                    "roleArn": {
                                      "Fn::GetAtt": [
                                        "clusterDefaultAutoScalingGroupLifecycleHookDrainHookRole3AE4A0D5",
                                        "Arn"
                                      ]
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "monocdk.aws_autoscaling.CfnLifecycleHook",
                                  "version": "1.102.0"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "monocdk.aws_autoscaling.LifecycleHook",
                              "version": "1.102.0"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "monocdk.aws_autoscaling.AutoScalingGroup",
                          "version": "1.102.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "monocdk.aws_ecs.Cluster",
                      "version": "1.102.0"
                    }
                  },
                  "SsmParameterValue:--aws--service--ecs--optimized-ami--amazon-linux-2--recommended--image_id:C96584B6-F00A-464E-AD19-53AFF4B05118": {
                    "id": "SsmParameterValue:--aws--service--ecs--optimized-ami--amazon-linux-2--recommended--image_id:C96584B6-F00A-464E-AD19-53AFF4B05118",
                    "path": "keuk/starbound-stage/server-stack/SsmParameterValue:--aws--service--ecs--optimized-ami--amazon-linux-2--recommended--image_id:C96584B6-F00A-464E-AD19-53AFF4B05118",
                    "constructInfo": {
                      "fqn": "monocdk.Resource",
                      "version": "1.102.0"
                    }
                  },
                  "task": {
                    "id": "task",
                    "path": "keuk/starbound-stage/server-stack/task",
                    "children": {
                      "TaskRole": {
                        "id": "TaskRole",
                        "path": "keuk/starbound-stage/server-stack/task/TaskRole",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "keuk/starbound-stage/server-stack/task/TaskRole/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                              "aws:cdk:cloudformation:props": {
                                "assumeRolePolicyDocument": {
                                  "Statement": [
                                    {
                                      "Action": "sts:AssumeRole",
                                      "Effect": "Allow",
                                      "Principal": {
                                        "Service": "ecs-tasks.amazonaws.com"
                                      }
                                    }
                                  ],
                                  "Version": "2012-10-17"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "monocdk.aws_iam.CfnRole",
                              "version": "1.102.0"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "monocdk.aws_iam.Role",
                          "version": "1.102.0"
                        }
                      },
                      "Resource": {
                        "id": "Resource",
                        "path": "keuk/starbound-stage/server-stack/task/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::ECS::TaskDefinition",
                          "aws:cdk:cloudformation:props": {
                            "containerDefinitions": [
                              {
                                "essential": true,
                                "image": "didstopia/starbound-server",
                                "memory": 4096,
                                "name": "game-host",
                                "portMappings": [
                                  {
                                    "containerPort": 21025,
                                    "hostPort": 0,
                                    "protocol": "tcp"
                                  }
                                ],
                                "secrets": [
                                  {
                                    "name": "STEAM_USERNAME",
                                    "valueFrom": {
                                      "Fn::Join": [
                                        "",
                                        [
                                          "arn:",
                                          {
                                            "Ref": "AWS::Partition"
                                          },
                                          ":secretsmanager:",
                                          {
                                            "Ref": "AWS::Region"
                                          },
                                          ":",
                                          {
                                            "Ref": "AWS::AccountId"
                                          },
                                          ":secret:steam/creds:STEAM_USERNAME::"
                                        ]
                                      ]
                                    }
                                  },
                                  {
                                    "name": "STEAM_PASSWORD",
                                    "valueFrom": {
                                      "Fn::Join": [
                                        "",
                                        [
                                          "arn:",
                                          {
                                            "Ref": "AWS::Partition"
                                          },
                                          ":secretsmanager:",
                                          {
                                            "Ref": "AWS::Region"
                                          },
                                          ":",
                                          {
                                            "Ref": "AWS::AccountId"
                                          },
                                          ":secret:steam/creds:STEAM_PASSWORD::"
                                        ]
                                      ]
                                    }
                                  }
                                ]
                              }
                            ],
                            "executionRoleArn": {
                              "Fn::GetAtt": [
                                "taskExecutionRoleBA215F69",
                                "Arn"
                              ]
                            },
                            "family": "keukstarboundstageserverstacktaskE6AEBC09",
                            "networkMode": "bridge",
                            "requiresCompatibilities": [
                              "EC2"
                            ],
                            "taskRoleArn": {
                              "Fn::GetAtt": [
                                "taskTaskRole99C98141",
                                "Arn"
                              ]
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "monocdk.aws_ecs.CfnTaskDefinition",
                          "version": "1.102.0"
                        }
                      },
                      "game-host": {
                        "id": "game-host",
                        "path": "keuk/starbound-stage/server-stack/task/game-host",
                        "constructInfo": {
                          "fqn": "monocdk.aws_ecs.ContainerDefinition",
                          "version": "1.102.0"
                        }
                      },
                      "ExecutionRole": {
                        "id": "ExecutionRole",
                        "path": "keuk/starbound-stage/server-stack/task/ExecutionRole",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "keuk/starbound-stage/server-stack/task/ExecutionRole/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                              "aws:cdk:cloudformation:props": {
                                "assumeRolePolicyDocument": {
                                  "Statement": [
                                    {
                                      "Action": "sts:AssumeRole",
                                      "Effect": "Allow",
                                      "Principal": {
                                        "Service": "ecs-tasks.amazonaws.com"
                                      }
                                    }
                                  ],
                                  "Version": "2012-10-17"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "monocdk.aws_iam.CfnRole",
                              "version": "1.102.0"
                            }
                          },
                          "DefaultPolicy": {
                            "id": "DefaultPolicy",
                            "path": "keuk/starbound-stage/server-stack/task/ExecutionRole/DefaultPolicy",
                            "children": {
                              "Resource": {
                                "id": "Resource",
                                "path": "keuk/starbound-stage/server-stack/task/ExecutionRole/DefaultPolicy/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                                  "aws:cdk:cloudformation:props": {
                                    "policyDocument": {
                                      "Statement": [
                                        {
                                          "Action": [
                                            "secretsmanager:GetSecretValue",
                                            "secretsmanager:DescribeSecret"
                                          ],
                                          "Effect": "Allow",
                                          "Resource": {
                                            "Fn::Join": [
                                              "",
                                              [
                                                "arn:",
                                                {
                                                  "Ref": "AWS::Partition"
                                                },
                                                ":secretsmanager:",
                                                {
                                                  "Ref": "AWS::Region"
                                                },
                                                ":",
                                                {
                                                  "Ref": "AWS::AccountId"
                                                },
                                                ":secret:steam/creds-??????"
                                              ]
                                            ]
                                          }
                                        }
                                      ],
                                      "Version": "2012-10-17"
                                    },
                                    "policyName": "taskExecutionRoleDefaultPolicy25B52F7A",
                                    "roles": [
                                      {
                                        "Ref": "taskExecutionRoleBA215F69"
                                      }
                                    ]
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "monocdk.aws_iam.CfnPolicy",
                                  "version": "1.102.0"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "monocdk.aws_iam.Policy",
                              "version": "1.102.0"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "monocdk.aws_iam.Role",
                          "version": "1.102.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "monocdk.aws_ecs.Ec2TaskDefinition",
                      "version": "1.102.0"
                    }
                  },
                  "steam-secret": {
                    "id": "steam-secret",
                    "path": "keuk/starbound-stage/server-stack/steam-secret",
                    "constructInfo": {
                      "fqn": "monocdk.Resource",
                      "version": "1.102.0"
                    }
                  },
                  "server": {
                    "id": "server",
                    "path": "keuk/starbound-stage/server-stack/server",
                    "children": {
                      "Service": {
                        "id": "Service",
                        "path": "keuk/starbound-stage/server-stack/server/Service",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::ECS::Service",
                          "aws:cdk:cloudformation:props": {
                            "cluster": {
                              "Ref": "cluster611F8AFF"
                            },
                            "deploymentConfiguration": {
                              "maximumPercent": 200,
                              "minimumHealthyPercent": 50
                            },
                            "enableEcsManagedTags": false,
                            "launchType": "EC2",
                            "schedulingStrategy": "REPLICA",
                            "taskDefinition": {
                              "Ref": "task117DF50A"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "monocdk.aws_ecs.CfnService",
                          "version": "1.102.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "monocdk.aws_ecs.Ec2Service",
                      "version": "1.102.0"
                    }
                  },
                  "CDKMetadata": {
                    "id": "CDKMetadata",
                    "path": "keuk/starbound-stage/server-stack/CDKMetadata",
                    "children": {
                      "Default": {
                        "id": "Default",
                        "path": "keuk/starbound-stage/server-stack/CDKMetadata/Default",
                        "constructInfo": {
                          "fqn": "monocdk.CfnResource",
                          "version": "1.102.0"
                        }
                      },
                      "Condition": {
                        "id": "Condition",
                        "path": "keuk/starbound-stage/server-stack/CDKMetadata/Condition",
                        "constructInfo": {
                          "fqn": "monocdk.CfnCondition",
                          "version": "1.102.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "monocdk.Construct",
                      "version": "1.102.0"
                    }
                  },
                  "BootstrapVersion": {
                    "id": "BootstrapVersion",
                    "path": "keuk/starbound-stage/server-stack/BootstrapVersion",
                    "constructInfo": {
                      "fqn": "monocdk.CfnParameter",
                      "version": "1.102.0"
                    }
                  },
                  "CheckBootstrapVersion": {
                    "id": "CheckBootstrapVersion",
                    "path": "keuk/starbound-stage/server-stack/CheckBootstrapVersion",
                    "constructInfo": {
                      "fqn": "monocdk.CfnRule",
                      "version": "1.102.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "monocdk.Stack",
                  "version": "1.102.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "monocdk.Stage",
              "version": "1.102.0"
            }
          },
          "CDKMetadata": {
            "id": "CDKMetadata",
            "path": "keuk/CDKMetadata",
            "children": {
              "Default": {
                "id": "Default",
                "path": "keuk/CDKMetadata/Default",
                "constructInfo": {
                  "fqn": "monocdk.CfnResource",
                  "version": "1.102.0"
                }
              },
              "Condition": {
                "id": "Condition",
                "path": "keuk/CDKMetadata/Condition",
                "constructInfo": {
                  "fqn": "monocdk.CfnCondition",
                  "version": "1.102.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "monocdk.Construct",
              "version": "1.102.0"
            }
          }
        },
        "constructInfo": {
          "fqn": "monocdk.Stack",
          "version": "1.102.0"
        }
      }
    },
    "constructInfo": {
      "fqn": "monocdk.App",
      "version": "1.102.0"
    }
  }
}